# Makefile.in generated by automake 1.8.5 from Makefile.am.
# lib/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





SOURCES = $(libcommcode_a_SOURCES) $(mainprog_SOURCES)

srcdir = .
top_srcdir = ..

pkgdatadir = $(datadir)/commoncode
pkglibdir = $(libdir)/commoncode
pkgincludedir = $(includedir)/commoncode
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /opt/freeware/bin/install -c
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = powerpc-ibm-aix7.1.0.0
host_triplet = rs6000-ibm-aix
target_triplet = rs6000-ibm-aix
am__append_1 = -q64 -qarch=pwr7 -qtune=pwr7 -qmaxmem=-1 -DHITACHISR16K
am__append_2 = -q64
#am__append_3 = 
#am__append_4 = 
bin_PROGRAMS = mainprog$(EXEEXT)
subdir = lib
DIST_COMMON = $(include_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(mkdir_p)
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
AR = ar
libcommcode_a_AR = $(AR) $(ARFLAGS)
libcommcode_a_LIBADD =
am__libcommcode_a_SOURCES_DIST = Communicator/communicator_dummy.cpp \
	Communicator/communicator_mpi.cpp Action/action_gauge.cpp \
	Action/action_Nf2.cpp Action/action_Nf2_ratio.cpp \
	Action/action_gaugetype_factory.cpp \
	Action/action_fermiontype_factory.cpp Communicator/comm_io.cpp \
	Communicator/fields_io.cpp Dirac_ops/dirac_wilson.cpp \
	Dirac_ops/dirac_wilson_EvenOdd.cpp \
	Dirac_ops/fopr_signH_Zolotarev.cpp \
	Dirac_ops/dirac_overlap_Zolotarev.cpp \
	Dirac_ops/dirac_Factory.cpp \
	Dirac_ops/dirac_optimalDomainWall.cpp \
	Dirac_ops/dirac_optimalDomainWall_4D.cpp \
	EigenModes/eigenModes_IRL.cpp \
	EigenModes/eigenProc_Zolotarev.cpp EigenModes/sortEigen.cpp \
	EigenModes/fopr_chebyshev_DdagD.cpp Solver/solver_BiCGStab.cpp \
	Solver/solver_CG.cpp Solver/solver_Factory.cpp \
	Solver/multiShiftSolver_CG.cpp Solver/multiShiftSolver.h \
	HMC/hmcGeneral.cpp HMC/hmcPrms.cpp HMC/mdExec_leapfrog.cpp \
	HMC/mdExec_Factory.cpp Measurements/GaugeM/staples.cpp \
	Measurements/FermionicM/qprop_MultiShift.cpp \
	Measurements/FermionicM/qprop.cpp \
	Measurements/FermionicM/qprop_EvenOdd.cpp \
	Measurements/FermionicM/qprop_optimalDomainWall.cpp \
	Measurements/FermionicM/fermion_meas_factory.cpp \
	Main/commonPrms.cpp Main/Geometry/siteIndex.cpp \
	Main/Geometry/siteIndex_eo.cpp Main/gaugeConf.cpp \
	PugiXML/pugixml.cpp PugiXML/pugi_interface.cpp \
	Tools/randNum_MT19937.cpp Tools/randNum_Factory.cpp \
	Tools/sunMat.cpp Test/test_Gauge.cpp \
	Test/test_EigenModes_IRL.cpp Test/test_MultiShiftSolver.cpp \
	Test/test_overlap.cpp Test/test_wilson_EvenOdd.cpp \
	Test/test_optimalDomainWall.cpp
#am__objects_1 = communicator_dummy.$(OBJEXT)
am__objects_1 = communicator_mpi.$(OBJEXT)
am_libcommcode_a_OBJECTS = $(am__objects_1) action_gauge.$(OBJEXT) \
	action_Nf2.$(OBJEXT) action_Nf2_ratio.$(OBJEXT) \
	action_gaugetype_factory.$(OBJEXT) \
	action_fermiontype_factory.$(OBJEXT) comm_io.$(OBJEXT) \
	fields_io.$(OBJEXT) dirac_wilson.$(OBJEXT) \
	dirac_wilson_EvenOdd.$(OBJEXT) fopr_signH_Zolotarev.$(OBJEXT) \
	dirac_overlap_Zolotarev.$(OBJEXT) dirac_Factory.$(OBJEXT) \
	dirac_optimalDomainWall.$(OBJEXT) \
	dirac_optimalDomainWall_4D.$(OBJEXT) eigenModes_IRL.$(OBJEXT) \
	eigenProc_Zolotarev.$(OBJEXT) sortEigen.$(OBJEXT) \
	fopr_chebyshev_DdagD.$(OBJEXT) solver_BiCGStab.$(OBJEXT) \
	solver_CG.$(OBJEXT) solver_Factory.$(OBJEXT) \
	multiShiftSolver_CG.$(OBJEXT) hmcGeneral.$(OBJEXT) \
	hmcPrms.$(OBJEXT) mdExec_leapfrog.$(OBJEXT) \
	mdExec_Factory.$(OBJEXT) staples.$(OBJEXT) \
	qprop_MultiShift.$(OBJEXT) qprop.$(OBJEXT) \
	qprop_EvenOdd.$(OBJEXT) qprop_optimalDomainWall.$(OBJEXT) \
	fermion_meas_factory.$(OBJEXT) commonPrms.$(OBJEXT) \
	siteIndex.$(OBJEXT) siteIndex_eo.$(OBJEXT) gaugeConf.$(OBJEXT) \
	pugixml.$(OBJEXT) pugi_interface.$(OBJEXT) \
	randNum_MT19937.$(OBJEXT) randNum_Factory.$(OBJEXT) \
	sunMat.$(OBJEXT) test_Gauge.$(OBJEXT) \
	test_EigenModes_IRL.$(OBJEXT) test_MultiShiftSolver.$(OBJEXT) \
	test_overlap.$(OBJEXT) test_wilson_EvenOdd.$(OBJEXT) \
	test_optimalDomainWall.$(OBJEXT)
libcommcode_a_OBJECTS = $(am_libcommcode_a_OBJECTS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_mainprog_OBJECTS = main.$(OBJEXT)
mainprog_OBJECTS = $(am_mainprog_OBJECTS)
mainprog_DEPENDENCIES = libcommcode.a
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/include
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/action_Nf2.Po \
	./$(DEPDIR)/action_Nf2_ratio.Po \
	./$(DEPDIR)/action_fermiontype_factory.Po \
	./$(DEPDIR)/action_gauge.Po \
	./$(DEPDIR)/action_gaugetype_factory.Po \
	./$(DEPDIR)/comm_io.Po ./$(DEPDIR)/commonPrms.Po \
	./$(DEPDIR)/communicator_dummy.Po \
	./$(DEPDIR)/communicator_mpi.Po \
	./$(DEPDIR)/dirac_Factory.Po \
	./$(DEPDIR)/dirac_optimalDomainWall.Po \
	./$(DEPDIR)/dirac_optimalDomainWall_4D.Po \
	./$(DEPDIR)/dirac_overlap_Zolotarev.Po \
	./$(DEPDIR)/dirac_wilson.Po \
	./$(DEPDIR)/dirac_wilson_EvenOdd.Po \
	./$(DEPDIR)/eigenModes_IRL.Po \
	./$(DEPDIR)/eigenProc_Zolotarev.Po \
	./$(DEPDIR)/fermion_meas_factory.Po \
	./$(DEPDIR)/fields_io.Po \
	./$(DEPDIR)/fopr_chebyshev_DdagD.Po \
	./$(DEPDIR)/fopr_signH_Zolotarev.Po \
	./$(DEPDIR)/gaugeConf.Po ./$(DEPDIR)/hmcGeneral.Po \
	./$(DEPDIR)/hmcPrms.Po ./$(DEPDIR)/main.Po \
	./$(DEPDIR)/mdExec_Factory.Po \
	./$(DEPDIR)/mdExec_leapfrog.Po \
	./$(DEPDIR)/multiShiftSolver_CG.Po \
	./$(DEPDIR)/pugi_interface.Po \
	./$(DEPDIR)/pugixml.Po ./$(DEPDIR)/qprop.Po \
	./$(DEPDIR)/qprop_EvenOdd.Po \
	./$(DEPDIR)/qprop_MultiShift.Po \
	./$(DEPDIR)/qprop_optimalDomainWall.Po \
	./$(DEPDIR)/randNum_Factory.Po \
	./$(DEPDIR)/randNum_MT19937.Po \
	./$(DEPDIR)/siteIndex.Po \
	./$(DEPDIR)/siteIndex_eo.Po \
	./$(DEPDIR)/solver_BiCGStab.Po \
	./$(DEPDIR)/solver_CG.Po \
	./$(DEPDIR)/solver_Factory.Po \
	./$(DEPDIR)/sortEigen.Po ./$(DEPDIR)/staples.Po \
	./$(DEPDIR)/sunMat.Po \
	./$(DEPDIR)/test_EigenModes_IRL.Po \
	./$(DEPDIR)/test_Gauge.Po \
	./$(DEPDIR)/test_MultiShiftSolver.Po \
	./$(DEPDIR)/test_optimalDomainWall.Po \
	./$(DEPDIR)/test_overlap.Po \
	./$(DEPDIR)/test_wilson_EvenOdd.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libcommcode_a_SOURCES) $(mainprog_SOURCES)
DIST_SOURCES = $(am__libcommcode_a_SOURCES_DIST) $(mainprog_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(include_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /srhome/scqcd/noaki/common_code/Nov19_2011/commoncode-0.6.2.5_mod/missing --run aclocal-1.8
AMDEP_FALSE = #
AMDEP_TRUE = 
AMTAR = ${SHELL} /srhome/scqcd/noaki/common_code/Nov19_2011/commoncode-0.6.2.5_mod/missing --run tar
ARFLAGS = -X64 -c -ru
AUTOCONF = ${SHELL} /srhome/scqcd/noaki/common_code/Nov19_2011/commoncode-0.6.2.5_mod/missing --run autoconf
AUTOHEADER = ${SHELL} /srhome/scqcd/noaki/common_code/Nov19_2011/commoncode-0.6.2.5_mod/missing --run autoheader
AUTOMAKE = ${SHELL} /srhome/scqcd/noaki/common_code/Nov19_2011/commoncode-0.6.2.5_mod/missing --run automake-1.8
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPPFLAGS = 
CXX = mpCC
CXXCPP = mpCC -E
CXXDEPMODE = depmode=aix
CXXFLAGS = -I/srhome/scqcd/cossu/gsl/include -qlanglvl=stdc99 $(am__append_1) $(am__append_3)
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DOXYGEN = 
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = grep -E
EXEEXT = 
HITACHI_FALSE = #
HITACHI_TRUE = 
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
LDFLAGS = -L/srhome/scqcd/cossu/gsl/lib $(am__append_2) $(am__append_4)
LIBOBJS =  malloc$U.o
LIBS = -lgsl -lgslcblas -lm 
LTLIBOBJS =  malloc$U.lo
MAKEINFO = ${SHELL} /srhome/scqcd/noaki/common_code/Nov19_2011/commoncode-0.6.2.5_mod/missing --run makeinfo
OBJEXT = o
PACKAGE = commoncode
PACKAGE_BUGREPORT = cossu@post.kek.jp
PACKAGE_NAME = CommonCode
PACKAGE_STRING = CommonCode 0.6.2.5
PACKAGE_TARNAME = commoncode
PACKAGE_VERSION = 0.6.2.5
PATH_SEPARATOR = :
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
USE_MPI_FALSE = #
USE_MPI_TRUE = 
VERSION = 0.6.2.5
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_RANLIB = ranlib
ac_ct_STRIP = strip
am__fastdepCC_FALSE = #
am__fastdepCC_TRUE = 
am__fastdepCXX_FALSE = 
am__fastdepCXX_TRUE = #
am__include = include
am__leading_dot = .
am__quote = 
bindir = ${exec_prefix}/bin
build = powerpc-ibm-aix7.1.0.0
build_alias = 
build_cpu = powerpc
build_os = aix7.1.0.0
build_vendor = ibm
datadir = ${prefix}/share
exec_prefix = ${prefix}
host = rs6000-ibm-aix
host_alias = rs6000-ibm-aix
host_cpu = rs6000
host_os = aix
host_vendor = ibm
includedir = ${prefix}/include
infodir = ${prefix}/info
install_sh = /srhome/scqcd/noaki/common_code/Nov19_2011/commoncode-0.6.2.5_mod/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localstatedir = ${prefix}/var
mandir = ${prefix}/man
mkdir_p = $(install_sh) -d
oldincludedir = /usr/include
prefix = /usr/local
program_transform_name = s,x,x,
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
sysconfdir = ${prefix}/etc
target = rs6000-ibm-aix
target_alias = 
target_cpu = rs6000
target_os = aix
target_vendor = ibm
SUBDIRS = . Test
#COMMUNICATOR_SRCS = Communicator/communicator_dummy.cpp	
COMMUNICATOR_SRCS = Communicator/communicator_mpi.cpp
AM_CPPFLAGS = -I$(top_srcdir)
AM_CFLAGS = -I$(top_srcdir)
AM_LDFLAGS = 
lib_LIBRARIES = libcommcode.a
EXTRA_DIST = Example.xml			\
		HMC/mdExec_leapfrog_eigen.cpp	\
		Test/test_HMC_noFactories.cpp

libcommcode_a_SOURCES = $(COMMUNICATOR_SRCS)            \
	 	Action/action_gauge.cpp 		\
		Action/action_Nf2.cpp			\
		Action/action_Nf2_ratio.cpp		\
		Action/action_gaugetype_factory.cpp	\
		Action/action_fermiontype_factory.cpp	\
		Communicator/comm_io.cpp		\
		Communicator/fields_io.cpp		\
		Dirac_ops/dirac_wilson.cpp		\
		Dirac_ops/dirac_wilson_EvenOdd.cpp	\
		Dirac_ops/fopr_signH_Zolotarev.cpp	\
		Dirac_ops/dirac_overlap_Zolotarev.cpp	\
		Dirac_ops/dirac_Factory.cpp		\
		Dirac_ops/dirac_optimalDomainWall.cpp   \
		Dirac_ops/dirac_optimalDomainWall_4D.cpp\
		EigenModes/eigenModes_IRL.cpp		\
		EigenModes/eigenProc_Zolotarev.cpp	\
		EigenModes/sortEigen.cpp		\
		EigenModes/fopr_chebyshev_DdagD.cpp	\
		Solver/solver_BiCGStab.cpp		\
		Solver/solver_CG.cpp			\
		Solver/solver_Factory.cpp		\
		Solver/multiShiftSolver_CG.cpp		\
		Solver/multiShiftSolver.h		\
		HMC/hmcGeneral.cpp			\
		HMC/hmcPrms.cpp				\
		HMC/mdExec_leapfrog.cpp			\
		HMC/mdExec_Factory.cpp			\
		Measurements/GaugeM/staples.cpp		\
		Measurements/FermionicM/qprop_MultiShift.cpp 		\
		Measurements/FermionicM/qprop.cpp 			\
		Measurements/FermionicM/qprop_EvenOdd.cpp		\
		Measurements/FermionicM/qprop_optimalDomainWall.cpp	\
		Measurements/FermionicM/fermion_meas_factory.cpp 	\
		Main/commonPrms.cpp			\
		Main/Geometry/siteIndex.cpp		\
		Main/Geometry/siteIndex_eo.cpp		\
		Main/gaugeConf.cpp			\
		PugiXML/pugixml.cpp			\
		PugiXML/pugi_interface.cpp		\
		Tools/randNum_MT19937.cpp		\
		Tools/randNum_Factory.cpp		\
		Tools/sunMat.cpp			\
		Test/test_Gauge.cpp			\
		Test/test_EigenModes_IRL.cpp		\
		Test/test_MultiShiftSolver.cpp		\
		Test/test_overlap.cpp			\
		Test/test_wilson_EvenOdd.cpp		\
		Test/test_optimalDomainWall.cpp		

mainprog_SOURCES = Main/main.cpp 				
mainprog_LDADD = libcommcode.a
include_HEADERS = $(top_srcdir)/include/commonPrms.h	\
			$(top_srcdir)/include/common_code.hpp	\
			$(top_srcdir)/include/common_fields.hpp	\
			$(top_srcdir)/include/config.h		\
			$(top_srcdir)/include/geometry.h	\
			$(top_srcdir)/include/field.h		\
			$(top_srcdir)/include/fopr_chebyshev_DdagD.h	\
			$(top_srcdir)/include/fopr_Dhat.h	\
			$(top_srcdir)/include/fopr_eo.h		\
			$(top_srcdir)/include/fopr_eo_wilson.h	\
			$(top_srcdir)/include/fopr.h		\
			$(top_srcdir)/include/fopr_signH_Zolotarev.h	\
			$(top_srcdir)/include/format_A.h	\
			$(top_srcdir)/include/format_F.h	\
			$(top_srcdir)/include/format_G.h	\
			$(top_srcdir)/include/typeDefs.h	\
			$(top_srcdir)/include/pugi_interface.h	\
			$(top_srcdir)/include/singleton.h	\
			PugiXML/pugixml.hpp			\
			PugiXML/pugiconfig.hpp			\
			Action/action_gauge.h			\
			Action/action.h				\
			Action/action_gaugetype_factory.h	\
			Action/action_fermiontype_factory.hpp	\
			Action/action_Factory.h			\
			Action/action_Nf2.h			\
			Action/action_Nf2_ratio.h		\
			EigenModes/eigenModes_IRL.h		\
			EigenModes/sortEigen.h			\
			EigenModes/eigenProc_Zolotarev.h	\
			Measurements/GaugeM/staples.h				\
			Measurements/FermionicM/source.h			\
			Measurements/FermionicM/qprop_MultiShift.hpp 		\
			Measurements/FermionicM/qprop.h				\
			Measurements/FermionicM/qprop_EvenOdd.h			\
			Measurements/FermionicM/mesonCorrel.h			\
			Measurements/FermionicM/qprop_optimalDomainWall.hpp 	\
			Measurements/FermionicM/fermion_meas_factory.hpp 	\
			Measurements/FermionicM/quark_propagators.hpp		\
			Communicator/communicator.h		\
			Communicator/comm_io.hpp		\
			Communicator/fields_io.hpp		\
			Main/Geometry/siteIndex.h		\
			Main/Geometry/shiftField.h		\
			Main/Geometry/shiftField_eo.h		\
			Main/Geometry/siteIndex_eo.h		\
			Main/gaugeConf.hpp			\
			Dirac_ops/dirac_Factory.hpp		\
			Dirac_ops/dirac_overlap_Zolotarev.h	\
			Dirac_ops/dirac_wilson.h		\
			Dirac_ops/dirac_wilson_EvenOdd.h	\
			Dirac_ops/dirac.h			\
			Dirac_ops/dirac_optimalDomainWall.hpp   \
			Dirac_ops/dirac_optimalDomainWall_4D.hpp\
			Solver/solver_Factory.hpp		\
			Solver/solver_BiCGStab.h		\
			Solver/solver.h				\
			Solver/solver_CG.h			\
			Solver/multiShiftSolver_CG.hpp		\
			HMC/hmcGeneral.h			\
			HMC/hmcPrms.h				\
			HMC/mdExec.h				\
			HMC/mdExec_leapfrog.h			\
			HMC/mdExec_leapfrog_eigen.h		\
			HMC/mdExec_Factory.h			\
			Tools/sunMat.h				\
			Tools/randNum_MP.h			\
			Tools/randNum.h				\
			Tools/sunVec.h				\
			Tools/randNum_MT19937.h			\
			Tools/randNum_Factory.h			\
			Tools/RAIIFactory.hpp			\
			Test/tests_all.hpp			\
			Test/test_EigenModes_IRL.h		\
			Test/test_MultiShiftSolver.h		\
			Test/test_overlap.hpp			\
			Test/test_wilson_EvenOdd.hpp		\
			Test/test_Gauge.hpp			\
			Test/tests.hpp

all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  lib/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  lib/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p="`echo $$p | sed -e 's|^.*/||'`"; \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libcommcode.a: $(libcommcode_a_OBJECTS) $(libcommcode_a_DEPENDENCIES) 
	-rm -f libcommcode.a
	$(libcommcode_a_AR) libcommcode.a $(libcommcode_a_OBJECTS) $(libcommcode_a_LIBADD)
	$(RANLIB) libcommcode.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
mainprog$(EXEEXT): $(mainprog_OBJECTS) $(mainprog_DEPENDENCIES) 
	@rm -f mainprog$(EXEEXT)
	$(CXXLINK) $(mainprog_LDFLAGS) $(mainprog_OBJECTS) $(mainprog_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/action_Nf2.Po
include ./$(DEPDIR)/action_Nf2_ratio.Po
include ./$(DEPDIR)/action_fermiontype_factory.Po
include ./$(DEPDIR)/action_gauge.Po
include ./$(DEPDIR)/action_gaugetype_factory.Po
include ./$(DEPDIR)/comm_io.Po
include ./$(DEPDIR)/commonPrms.Po
include ./$(DEPDIR)/communicator_dummy.Po
include ./$(DEPDIR)/communicator_mpi.Po
include ./$(DEPDIR)/dirac_Factory.Po
include ./$(DEPDIR)/dirac_optimalDomainWall.Po
include ./$(DEPDIR)/dirac_optimalDomainWall_4D.Po
include ./$(DEPDIR)/dirac_overlap_Zolotarev.Po
include ./$(DEPDIR)/dirac_wilson.Po
include ./$(DEPDIR)/dirac_wilson_EvenOdd.Po
include ./$(DEPDIR)/eigenModes_IRL.Po
include ./$(DEPDIR)/eigenProc_Zolotarev.Po
include ./$(DEPDIR)/fermion_meas_factory.Po
include ./$(DEPDIR)/fields_io.Po
include ./$(DEPDIR)/fopr_chebyshev_DdagD.Po
include ./$(DEPDIR)/fopr_signH_Zolotarev.Po
include ./$(DEPDIR)/gaugeConf.Po
include ./$(DEPDIR)/hmcGeneral.Po
include ./$(DEPDIR)/hmcPrms.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/mdExec_Factory.Po
include ./$(DEPDIR)/mdExec_leapfrog.Po
include ./$(DEPDIR)/multiShiftSolver_CG.Po
include ./$(DEPDIR)/pugi_interface.Po
include ./$(DEPDIR)/pugixml.Po
include ./$(DEPDIR)/qprop.Po
include ./$(DEPDIR)/qprop_EvenOdd.Po
include ./$(DEPDIR)/qprop_MultiShift.Po
include ./$(DEPDIR)/qprop_optimalDomainWall.Po
include ./$(DEPDIR)/randNum_Factory.Po
include ./$(DEPDIR)/randNum_MT19937.Po
include ./$(DEPDIR)/siteIndex.Po
include ./$(DEPDIR)/siteIndex_eo.Po
include ./$(DEPDIR)/solver_BiCGStab.Po
include ./$(DEPDIR)/solver_CG.Po
include ./$(DEPDIR)/solver_Factory.Po
include ./$(DEPDIR)/sortEigen.Po
include ./$(DEPDIR)/staples.Po
include ./$(DEPDIR)/sunMat.Po
include ./$(DEPDIR)/test_EigenModes_IRL.Po
include ./$(DEPDIR)/test_Gauge.Po
include ./$(DEPDIR)/test_MultiShiftSolver.Po
include ./$(DEPDIR)/test_optimalDomainWall.Po
include ./$(DEPDIR)/test_overlap.Po
include ./$(DEPDIR)/test_wilson_EvenOdd.Po

.cpp.o:
#	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
#	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
#	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
#	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

communicator_dummy.o: Communicator/communicator_dummy.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT communicator_dummy.o -MD -MP -MF "$(DEPDIR)/communicator_dummy.Tpo" -c -o communicator_dummy.o `test -f 'Communicator/communicator_dummy.cpp' || echo '$(srcdir)/'`Communicator/communicator_dummy.cpp; \
#	then mv -f "$(DEPDIR)/communicator_dummy.Tpo" "$(DEPDIR)/communicator_dummy.Po"; else rm -f "$(DEPDIR)/communicator_dummy.Tpo"; exit 1; fi
	source='Communicator/communicator_dummy.cpp' object='communicator_dummy.o' libtool=no \
	depfile='$(DEPDIR)/communicator_dummy.Po' tmpdepfile='$(DEPDIR)/communicator_dummy.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o communicator_dummy.o `test -f 'Communicator/communicator_dummy.cpp' || echo '$(srcdir)/'`Communicator/communicator_dummy.cpp

communicator_dummy.obj: Communicator/communicator_dummy.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT communicator_dummy.obj -MD -MP -MF "$(DEPDIR)/communicator_dummy.Tpo" -c -o communicator_dummy.obj `if test -f 'Communicator/communicator_dummy.cpp'; then $(CYGPATH_W) 'Communicator/communicator_dummy.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/communicator_dummy.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/communicator_dummy.Tpo" "$(DEPDIR)/communicator_dummy.Po"; else rm -f "$(DEPDIR)/communicator_dummy.Tpo"; exit 1; fi
	source='Communicator/communicator_dummy.cpp' object='communicator_dummy.obj' libtool=no \
	depfile='$(DEPDIR)/communicator_dummy.Po' tmpdepfile='$(DEPDIR)/communicator_dummy.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o communicator_dummy.obj `if test -f 'Communicator/communicator_dummy.cpp'; then $(CYGPATH_W) 'Communicator/communicator_dummy.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/communicator_dummy.cpp'; fi`

communicator_mpi.o: Communicator/communicator_mpi.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT communicator_mpi.o -MD -MP -MF "$(DEPDIR)/communicator_mpi.Tpo" -c -o communicator_mpi.o `test -f 'Communicator/communicator_mpi.cpp' || echo '$(srcdir)/'`Communicator/communicator_mpi.cpp; \
#	then mv -f "$(DEPDIR)/communicator_mpi.Tpo" "$(DEPDIR)/communicator_mpi.Po"; else rm -f "$(DEPDIR)/communicator_mpi.Tpo"; exit 1; fi
	source='Communicator/communicator_mpi.cpp' object='communicator_mpi.o' libtool=no \
	depfile='$(DEPDIR)/communicator_mpi.Po' tmpdepfile='$(DEPDIR)/communicator_mpi.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o communicator_mpi.o `test -f 'Communicator/communicator_mpi.cpp' || echo '$(srcdir)/'`Communicator/communicator_mpi.cpp

communicator_mpi.obj: Communicator/communicator_mpi.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT communicator_mpi.obj -MD -MP -MF "$(DEPDIR)/communicator_mpi.Tpo" -c -o communicator_mpi.obj `if test -f 'Communicator/communicator_mpi.cpp'; then $(CYGPATH_W) 'Communicator/communicator_mpi.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/communicator_mpi.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/communicator_mpi.Tpo" "$(DEPDIR)/communicator_mpi.Po"; else rm -f "$(DEPDIR)/communicator_mpi.Tpo"; exit 1; fi
	source='Communicator/communicator_mpi.cpp' object='communicator_mpi.obj' libtool=no \
	depfile='$(DEPDIR)/communicator_mpi.Po' tmpdepfile='$(DEPDIR)/communicator_mpi.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o communicator_mpi.obj `if test -f 'Communicator/communicator_mpi.cpp'; then $(CYGPATH_W) 'Communicator/communicator_mpi.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/communicator_mpi.cpp'; fi`

action_gauge.o: Action/action_gauge.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT action_gauge.o -MD -MP -MF "$(DEPDIR)/action_gauge.Tpo" -c -o action_gauge.o `test -f 'Action/action_gauge.cpp' || echo '$(srcdir)/'`Action/action_gauge.cpp; \
#	then mv -f "$(DEPDIR)/action_gauge.Tpo" "$(DEPDIR)/action_gauge.Po"; else rm -f "$(DEPDIR)/action_gauge.Tpo"; exit 1; fi
	source='Action/action_gauge.cpp' object='action_gauge.o' libtool=no \
	depfile='$(DEPDIR)/action_gauge.Po' tmpdepfile='$(DEPDIR)/action_gauge.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o action_gauge.o `test -f 'Action/action_gauge.cpp' || echo '$(srcdir)/'`Action/action_gauge.cpp

action_gauge.obj: Action/action_gauge.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT action_gauge.obj -MD -MP -MF "$(DEPDIR)/action_gauge.Tpo" -c -o action_gauge.obj `if test -f 'Action/action_gauge.cpp'; then $(CYGPATH_W) 'Action/action_gauge.cpp'; else $(CYGPATH_W) '$(srcdir)/Action/action_gauge.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/action_gauge.Tpo" "$(DEPDIR)/action_gauge.Po"; else rm -f "$(DEPDIR)/action_gauge.Tpo"; exit 1; fi
	source='Action/action_gauge.cpp' object='action_gauge.obj' libtool=no \
	depfile='$(DEPDIR)/action_gauge.Po' tmpdepfile='$(DEPDIR)/action_gauge.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o action_gauge.obj `if test -f 'Action/action_gauge.cpp'; then $(CYGPATH_W) 'Action/action_gauge.cpp'; else $(CYGPATH_W) '$(srcdir)/Action/action_gauge.cpp'; fi`

action_Nf2.o: Action/action_Nf2.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT action_Nf2.o -MD -MP -MF "$(DEPDIR)/action_Nf2.Tpo" -c -o action_Nf2.o `test -f 'Action/action_Nf2.cpp' || echo '$(srcdir)/'`Action/action_Nf2.cpp; \
#	then mv -f "$(DEPDIR)/action_Nf2.Tpo" "$(DEPDIR)/action_Nf2.Po"; else rm -f "$(DEPDIR)/action_Nf2.Tpo"; exit 1; fi
	source='Action/action_Nf2.cpp' object='action_Nf2.o' libtool=no \
	depfile='$(DEPDIR)/action_Nf2.Po' tmpdepfile='$(DEPDIR)/action_Nf2.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o action_Nf2.o `test -f 'Action/action_Nf2.cpp' || echo '$(srcdir)/'`Action/action_Nf2.cpp

action_Nf2.obj: Action/action_Nf2.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT action_Nf2.obj -MD -MP -MF "$(DEPDIR)/action_Nf2.Tpo" -c -o action_Nf2.obj `if test -f 'Action/action_Nf2.cpp'; then $(CYGPATH_W) 'Action/action_Nf2.cpp'; else $(CYGPATH_W) '$(srcdir)/Action/action_Nf2.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/action_Nf2.Tpo" "$(DEPDIR)/action_Nf2.Po"; else rm -f "$(DEPDIR)/action_Nf2.Tpo"; exit 1; fi
	source='Action/action_Nf2.cpp' object='action_Nf2.obj' libtool=no \
	depfile='$(DEPDIR)/action_Nf2.Po' tmpdepfile='$(DEPDIR)/action_Nf2.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o action_Nf2.obj `if test -f 'Action/action_Nf2.cpp'; then $(CYGPATH_W) 'Action/action_Nf2.cpp'; else $(CYGPATH_W) '$(srcdir)/Action/action_Nf2.cpp'; fi`

action_Nf2_ratio.o: Action/action_Nf2_ratio.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT action_Nf2_ratio.o -MD -MP -MF "$(DEPDIR)/action_Nf2_ratio.Tpo" -c -o action_Nf2_ratio.o `test -f 'Action/action_Nf2_ratio.cpp' || echo '$(srcdir)/'`Action/action_Nf2_ratio.cpp; \
#	then mv -f "$(DEPDIR)/action_Nf2_ratio.Tpo" "$(DEPDIR)/action_Nf2_ratio.Po"; else rm -f "$(DEPDIR)/action_Nf2_ratio.Tpo"; exit 1; fi
	source='Action/action_Nf2_ratio.cpp' object='action_Nf2_ratio.o' libtool=no \
	depfile='$(DEPDIR)/action_Nf2_ratio.Po' tmpdepfile='$(DEPDIR)/action_Nf2_ratio.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o action_Nf2_ratio.o `test -f 'Action/action_Nf2_ratio.cpp' || echo '$(srcdir)/'`Action/action_Nf2_ratio.cpp

action_Nf2_ratio.obj: Action/action_Nf2_ratio.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT action_Nf2_ratio.obj -MD -MP -MF "$(DEPDIR)/action_Nf2_ratio.Tpo" -c -o action_Nf2_ratio.obj `if test -f 'Action/action_Nf2_ratio.cpp'; then $(CYGPATH_W) 'Action/action_Nf2_ratio.cpp'; else $(CYGPATH_W) '$(srcdir)/Action/action_Nf2_ratio.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/action_Nf2_ratio.Tpo" "$(DEPDIR)/action_Nf2_ratio.Po"; else rm -f "$(DEPDIR)/action_Nf2_ratio.Tpo"; exit 1; fi
	source='Action/action_Nf2_ratio.cpp' object='action_Nf2_ratio.obj' libtool=no \
	depfile='$(DEPDIR)/action_Nf2_ratio.Po' tmpdepfile='$(DEPDIR)/action_Nf2_ratio.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o action_Nf2_ratio.obj `if test -f 'Action/action_Nf2_ratio.cpp'; then $(CYGPATH_W) 'Action/action_Nf2_ratio.cpp'; else $(CYGPATH_W) '$(srcdir)/Action/action_Nf2_ratio.cpp'; fi`

action_gaugetype_factory.o: Action/action_gaugetype_factory.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT action_gaugetype_factory.o -MD -MP -MF "$(DEPDIR)/action_gaugetype_factory.Tpo" -c -o action_gaugetype_factory.o `test -f 'Action/action_gaugetype_factory.cpp' || echo '$(srcdir)/'`Action/action_gaugetype_factory.cpp; \
#	then mv -f "$(DEPDIR)/action_gaugetype_factory.Tpo" "$(DEPDIR)/action_gaugetype_factory.Po"; else rm -f "$(DEPDIR)/action_gaugetype_factory.Tpo"; exit 1; fi
	source='Action/action_gaugetype_factory.cpp' object='action_gaugetype_factory.o' libtool=no \
	depfile='$(DEPDIR)/action_gaugetype_factory.Po' tmpdepfile='$(DEPDIR)/action_gaugetype_factory.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o action_gaugetype_factory.o `test -f 'Action/action_gaugetype_factory.cpp' || echo '$(srcdir)/'`Action/action_gaugetype_factory.cpp

action_gaugetype_factory.obj: Action/action_gaugetype_factory.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT action_gaugetype_factory.obj -MD -MP -MF "$(DEPDIR)/action_gaugetype_factory.Tpo" -c -o action_gaugetype_factory.obj `if test -f 'Action/action_gaugetype_factory.cpp'; then $(CYGPATH_W) 'Action/action_gaugetype_factory.cpp'; else $(CYGPATH_W) '$(srcdir)/Action/action_gaugetype_factory.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/action_gaugetype_factory.Tpo" "$(DEPDIR)/action_gaugetype_factory.Po"; else rm -f "$(DEPDIR)/action_gaugetype_factory.Tpo"; exit 1; fi
	source='Action/action_gaugetype_factory.cpp' object='action_gaugetype_factory.obj' libtool=no \
	depfile='$(DEPDIR)/action_gaugetype_factory.Po' tmpdepfile='$(DEPDIR)/action_gaugetype_factory.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o action_gaugetype_factory.obj `if test -f 'Action/action_gaugetype_factory.cpp'; then $(CYGPATH_W) 'Action/action_gaugetype_factory.cpp'; else $(CYGPATH_W) '$(srcdir)/Action/action_gaugetype_factory.cpp'; fi`

action_fermiontype_factory.o: Action/action_fermiontype_factory.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT action_fermiontype_factory.o -MD -MP -MF "$(DEPDIR)/action_fermiontype_factory.Tpo" -c -o action_fermiontype_factory.o `test -f 'Action/action_fermiontype_factory.cpp' || echo '$(srcdir)/'`Action/action_fermiontype_factory.cpp; \
#	then mv -f "$(DEPDIR)/action_fermiontype_factory.Tpo" "$(DEPDIR)/action_fermiontype_factory.Po"; else rm -f "$(DEPDIR)/action_fermiontype_factory.Tpo"; exit 1; fi
	source='Action/action_fermiontype_factory.cpp' object='action_fermiontype_factory.o' libtool=no \
	depfile='$(DEPDIR)/action_fermiontype_factory.Po' tmpdepfile='$(DEPDIR)/action_fermiontype_factory.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o action_fermiontype_factory.o `test -f 'Action/action_fermiontype_factory.cpp' || echo '$(srcdir)/'`Action/action_fermiontype_factory.cpp

action_fermiontype_factory.obj: Action/action_fermiontype_factory.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT action_fermiontype_factory.obj -MD -MP -MF "$(DEPDIR)/action_fermiontype_factory.Tpo" -c -o action_fermiontype_factory.obj `if test -f 'Action/action_fermiontype_factory.cpp'; then $(CYGPATH_W) 'Action/action_fermiontype_factory.cpp'; else $(CYGPATH_W) '$(srcdir)/Action/action_fermiontype_factory.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/action_fermiontype_factory.Tpo" "$(DEPDIR)/action_fermiontype_factory.Po"; else rm -f "$(DEPDIR)/action_fermiontype_factory.Tpo"; exit 1; fi
	source='Action/action_fermiontype_factory.cpp' object='action_fermiontype_factory.obj' libtool=no \
	depfile='$(DEPDIR)/action_fermiontype_factory.Po' tmpdepfile='$(DEPDIR)/action_fermiontype_factory.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o action_fermiontype_factory.obj `if test -f 'Action/action_fermiontype_factory.cpp'; then $(CYGPATH_W) 'Action/action_fermiontype_factory.cpp'; else $(CYGPATH_W) '$(srcdir)/Action/action_fermiontype_factory.cpp'; fi`

comm_io.o: Communicator/comm_io.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT comm_io.o -MD -MP -MF "$(DEPDIR)/comm_io.Tpo" -c -o comm_io.o `test -f 'Communicator/comm_io.cpp' || echo '$(srcdir)/'`Communicator/comm_io.cpp; \
#	then mv -f "$(DEPDIR)/comm_io.Tpo" "$(DEPDIR)/comm_io.Po"; else rm -f "$(DEPDIR)/comm_io.Tpo"; exit 1; fi
	source='Communicator/comm_io.cpp' object='comm_io.o' libtool=no \
	depfile='$(DEPDIR)/comm_io.Po' tmpdepfile='$(DEPDIR)/comm_io.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o comm_io.o `test -f 'Communicator/comm_io.cpp' || echo '$(srcdir)/'`Communicator/comm_io.cpp

comm_io.obj: Communicator/comm_io.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT comm_io.obj -MD -MP -MF "$(DEPDIR)/comm_io.Tpo" -c -o comm_io.obj `if test -f 'Communicator/comm_io.cpp'; then $(CYGPATH_W) 'Communicator/comm_io.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/comm_io.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/comm_io.Tpo" "$(DEPDIR)/comm_io.Po"; else rm -f "$(DEPDIR)/comm_io.Tpo"; exit 1; fi
	source='Communicator/comm_io.cpp' object='comm_io.obj' libtool=no \
	depfile='$(DEPDIR)/comm_io.Po' tmpdepfile='$(DEPDIR)/comm_io.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o comm_io.obj `if test -f 'Communicator/comm_io.cpp'; then $(CYGPATH_W) 'Communicator/comm_io.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/comm_io.cpp'; fi`

fields_io.o: Communicator/fields_io.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fields_io.o -MD -MP -MF "$(DEPDIR)/fields_io.Tpo" -c -o fields_io.o `test -f 'Communicator/fields_io.cpp' || echo '$(srcdir)/'`Communicator/fields_io.cpp; \
#	then mv -f "$(DEPDIR)/fields_io.Tpo" "$(DEPDIR)/fields_io.Po"; else rm -f "$(DEPDIR)/fields_io.Tpo"; exit 1; fi
	source='Communicator/fields_io.cpp' object='fields_io.o' libtool=no \
	depfile='$(DEPDIR)/fields_io.Po' tmpdepfile='$(DEPDIR)/fields_io.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fields_io.o `test -f 'Communicator/fields_io.cpp' || echo '$(srcdir)/'`Communicator/fields_io.cpp

fields_io.obj: Communicator/fields_io.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fields_io.obj -MD -MP -MF "$(DEPDIR)/fields_io.Tpo" -c -o fields_io.obj `if test -f 'Communicator/fields_io.cpp'; then $(CYGPATH_W) 'Communicator/fields_io.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/fields_io.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/fields_io.Tpo" "$(DEPDIR)/fields_io.Po"; else rm -f "$(DEPDIR)/fields_io.Tpo"; exit 1; fi
	source='Communicator/fields_io.cpp' object='fields_io.obj' libtool=no \
	depfile='$(DEPDIR)/fields_io.Po' tmpdepfile='$(DEPDIR)/fields_io.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fields_io.obj `if test -f 'Communicator/fields_io.cpp'; then $(CYGPATH_W) 'Communicator/fields_io.cpp'; else $(CYGPATH_W) '$(srcdir)/Communicator/fields_io.cpp'; fi`

dirac_wilson.o: Dirac_ops/dirac_wilson.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dirac_wilson.o -MD -MP -MF "$(DEPDIR)/dirac_wilson.Tpo" -c -o dirac_wilson.o `test -f 'Dirac_ops/dirac_wilson.cpp' || echo '$(srcdir)/'`Dirac_ops/dirac_wilson.cpp; \
#	then mv -f "$(DEPDIR)/dirac_wilson.Tpo" "$(DEPDIR)/dirac_wilson.Po"; else rm -f "$(DEPDIR)/dirac_wilson.Tpo"; exit 1; fi
	source='Dirac_ops/dirac_wilson.cpp' object='dirac_wilson.o' libtool=no \
	depfile='$(DEPDIR)/dirac_wilson.Po' tmpdepfile='$(DEPDIR)/dirac_wilson.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dirac_wilson.o `test -f 'Dirac_ops/dirac_wilson.cpp' || echo '$(srcdir)/'`Dirac_ops/dirac_wilson.cpp

dirac_wilson.obj: Dirac_ops/dirac_wilson.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dirac_wilson.obj -MD -MP -MF "$(DEPDIR)/dirac_wilson.Tpo" -c -o dirac_wilson.obj `if test -f 'Dirac_ops/dirac_wilson.cpp'; then $(CYGPATH_W) 'Dirac_ops/dirac_wilson.cpp'; else $(CYGPATH_W) '$(srcdir)/Dirac_ops/dirac_wilson.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/dirac_wilson.Tpo" "$(DEPDIR)/dirac_wilson.Po"; else rm -f "$(DEPDIR)/dirac_wilson.Tpo"; exit 1; fi
	source='Dirac_ops/dirac_wilson.cpp' object='dirac_wilson.obj' libtool=no \
	depfile='$(DEPDIR)/dirac_wilson.Po' tmpdepfile='$(DEPDIR)/dirac_wilson.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dirac_wilson.obj `if test -f 'Dirac_ops/dirac_wilson.cpp'; then $(CYGPATH_W) 'Dirac_ops/dirac_wilson.cpp'; else $(CYGPATH_W) '$(srcdir)/Dirac_ops/dirac_wilson.cpp'; fi`

dirac_wilson_EvenOdd.o: Dirac_ops/dirac_wilson_EvenOdd.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dirac_wilson_EvenOdd.o -MD -MP -MF "$(DEPDIR)/dirac_wilson_EvenOdd.Tpo" -c -o dirac_wilson_EvenOdd.o `test -f 'Dirac_ops/dirac_wilson_EvenOdd.cpp' || echo '$(srcdir)/'`Dirac_ops/dirac_wilson_EvenOdd.cpp; \
#	then mv -f "$(DEPDIR)/dirac_wilson_EvenOdd.Tpo" "$(DEPDIR)/dirac_wilson_EvenOdd.Po"; else rm -f "$(DEPDIR)/dirac_wilson_EvenOdd.Tpo"; exit 1; fi
	source='Dirac_ops/dirac_wilson_EvenOdd.cpp' object='dirac_wilson_EvenOdd.o' libtool=no \
	depfile='$(DEPDIR)/dirac_wilson_EvenOdd.Po' tmpdepfile='$(DEPDIR)/dirac_wilson_EvenOdd.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dirac_wilson_EvenOdd.o `test -f 'Dirac_ops/dirac_wilson_EvenOdd.cpp' || echo '$(srcdir)/'`Dirac_ops/dirac_wilson_EvenOdd.cpp

dirac_wilson_EvenOdd.obj: Dirac_ops/dirac_wilson_EvenOdd.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dirac_wilson_EvenOdd.obj -MD -MP -MF "$(DEPDIR)/dirac_wilson_EvenOdd.Tpo" -c -o dirac_wilson_EvenOdd.obj `if test -f 'Dirac_ops/dirac_wilson_EvenOdd.cpp'; then $(CYGPATH_W) 'Dirac_ops/dirac_wilson_EvenOdd.cpp'; else $(CYGPATH_W) '$(srcdir)/Dirac_ops/dirac_wilson_EvenOdd.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/dirac_wilson_EvenOdd.Tpo" "$(DEPDIR)/dirac_wilson_EvenOdd.Po"; else rm -f "$(DEPDIR)/dirac_wilson_EvenOdd.Tpo"; exit 1; fi
	source='Dirac_ops/dirac_wilson_EvenOdd.cpp' object='dirac_wilson_EvenOdd.obj' libtool=no \
	depfile='$(DEPDIR)/dirac_wilson_EvenOdd.Po' tmpdepfile='$(DEPDIR)/dirac_wilson_EvenOdd.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dirac_wilson_EvenOdd.obj `if test -f 'Dirac_ops/dirac_wilson_EvenOdd.cpp'; then $(CYGPATH_W) 'Dirac_ops/dirac_wilson_EvenOdd.cpp'; else $(CYGPATH_W) '$(srcdir)/Dirac_ops/dirac_wilson_EvenOdd.cpp'; fi`

fopr_signH_Zolotarev.o: Dirac_ops/fopr_signH_Zolotarev.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fopr_signH_Zolotarev.o -MD -MP -MF "$(DEPDIR)/fopr_signH_Zolotarev.Tpo" -c -o fopr_signH_Zolotarev.o `test -f 'Dirac_ops/fopr_signH_Zolotarev.cpp' || echo '$(srcdir)/'`Dirac_ops/fopr_signH_Zolotarev.cpp; \
#	then mv -f "$(DEPDIR)/fopr_signH_Zolotarev.Tpo" "$(DEPDIR)/fopr_signH_Zolotarev.Po"; else rm -f "$(DEPDIR)/fopr_signH_Zolotarev.Tpo"; exit 1; fi
	source='Dirac_ops/fopr_signH_Zolotarev.cpp' object='fopr_signH_Zolotarev.o' libtool=no \
	depfile='$(DEPDIR)/fopr_signH_Zolotarev.Po' tmpdepfile='$(DEPDIR)/fopr_signH_Zolotarev.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fopr_signH_Zolotarev.o `test -f 'Dirac_ops/fopr_signH_Zolotarev.cpp' || echo '$(srcdir)/'`Dirac_ops/fopr_signH_Zolotarev.cpp

fopr_signH_Zolotarev.obj: Dirac_ops/fopr_signH_Zolotarev.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fopr_signH_Zolotarev.obj -MD -MP -MF "$(DEPDIR)/fopr_signH_Zolotarev.Tpo" -c -o fopr_signH_Zolotarev.obj `if test -f 'Dirac_ops/fopr_signH_Zolotarev.cpp'; then $(CYGPATH_W) 'Dirac_ops/fopr_signH_Zolotarev.cpp'; else $(CYGPATH_W) '$(srcdir)/Dirac_ops/fopr_signH_Zolotarev.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/fopr_signH_Zolotarev.Tpo" "$(DEPDIR)/fopr_signH_Zolotarev.Po"; else rm -f "$(DEPDIR)/fopr_signH_Zolotarev.Tpo"; exit 1; fi
	source='Dirac_ops/fopr_signH_Zolotarev.cpp' object='fopr_signH_Zolotarev.obj' libtool=no \
	depfile='$(DEPDIR)/fopr_signH_Zolotarev.Po' tmpdepfile='$(DEPDIR)/fopr_signH_Zolotarev.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fopr_signH_Zolotarev.obj `if test -f 'Dirac_ops/fopr_signH_Zolotarev.cpp'; then $(CYGPATH_W) 'Dirac_ops/fopr_signH_Zolotarev.cpp'; else $(CYGPATH_W) '$(srcdir)/Dirac_ops/fopr_signH_Zolotarev.cpp'; fi`

dirac_overlap_Zolotarev.o: Dirac_ops/dirac_overlap_Zolotarev.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dirac_overlap_Zolotarev.o -MD -MP -MF "$(DEPDIR)/dirac_overlap_Zolotarev.Tpo" -c -o dirac_overlap_Zolotarev.o `test -f 'Dirac_ops/dirac_overlap_Zolotarev.cpp' || echo '$(srcdir)/'`Dirac_ops/dirac_overlap_Zolotarev.cpp; \
#	then mv -f "$(DEPDIR)/dirac_overlap_Zolotarev.Tpo" "$(DEPDIR)/dirac_overlap_Zolotarev.Po"; else rm -f "$(DEPDIR)/dirac_overlap_Zolotarev.Tpo"; exit 1; fi
	source='Dirac_ops/dirac_overlap_Zolotarev.cpp' object='dirac_overlap_Zolotarev.o' libtool=no \
	depfile='$(DEPDIR)/dirac_overlap_Zolotarev.Po' tmpdepfile='$(DEPDIR)/dirac_overlap_Zolotarev.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dirac_overlap_Zolotarev.o `test -f 'Dirac_ops/dirac_overlap_Zolotarev.cpp' || echo '$(srcdir)/'`Dirac_ops/dirac_overlap_Zolotarev.cpp

dirac_overlap_Zolotarev.obj: Dirac_ops/dirac_overlap_Zolotarev.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dirac_overlap_Zolotarev.obj -MD -MP -MF "$(DEPDIR)/dirac_overlap_Zolotarev.Tpo" -c -o dirac_overlap_Zolotarev.obj `if test -f 'Dirac_ops/dirac_overlap_Zolotarev.cpp'; then $(CYGPATH_W) 'Dirac_ops/dirac_overlap_Zolotarev.cpp'; else $(CYGPATH_W) '$(srcdir)/Dirac_ops/dirac_overlap_Zolotarev.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/dirac_overlap_Zolotarev.Tpo" "$(DEPDIR)/dirac_overlap_Zolotarev.Po"; else rm -f "$(DEPDIR)/dirac_overlap_Zolotarev.Tpo"; exit 1; fi
	source='Dirac_ops/dirac_overlap_Zolotarev.cpp' object='dirac_overlap_Zolotarev.obj' libtool=no \
	depfile='$(DEPDIR)/dirac_overlap_Zolotarev.Po' tmpdepfile='$(DEPDIR)/dirac_overlap_Zolotarev.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dirac_overlap_Zolotarev.obj `if test -f 'Dirac_ops/dirac_overlap_Zolotarev.cpp'; then $(CYGPATH_W) 'Dirac_ops/dirac_overlap_Zolotarev.cpp'; else $(CYGPATH_W) '$(srcdir)/Dirac_ops/dirac_overlap_Zolotarev.cpp'; fi`

dirac_Factory.o: Dirac_ops/dirac_Factory.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dirac_Factory.o -MD -MP -MF "$(DEPDIR)/dirac_Factory.Tpo" -c -o dirac_Factory.o `test -f 'Dirac_ops/dirac_Factory.cpp' || echo '$(srcdir)/'`Dirac_ops/dirac_Factory.cpp; \
#	then mv -f "$(DEPDIR)/dirac_Factory.Tpo" "$(DEPDIR)/dirac_Factory.Po"; else rm -f "$(DEPDIR)/dirac_Factory.Tpo"; exit 1; fi
	source='Dirac_ops/dirac_Factory.cpp' object='dirac_Factory.o' libtool=no \
	depfile='$(DEPDIR)/dirac_Factory.Po' tmpdepfile='$(DEPDIR)/dirac_Factory.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dirac_Factory.o `test -f 'Dirac_ops/dirac_Factory.cpp' || echo '$(srcdir)/'`Dirac_ops/dirac_Factory.cpp

dirac_Factory.obj: Dirac_ops/dirac_Factory.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dirac_Factory.obj -MD -MP -MF "$(DEPDIR)/dirac_Factory.Tpo" -c -o dirac_Factory.obj `if test -f 'Dirac_ops/dirac_Factory.cpp'; then $(CYGPATH_W) 'Dirac_ops/dirac_Factory.cpp'; else $(CYGPATH_W) '$(srcdir)/Dirac_ops/dirac_Factory.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/dirac_Factory.Tpo" "$(DEPDIR)/dirac_Factory.Po"; else rm -f "$(DEPDIR)/dirac_Factory.Tpo"; exit 1; fi
	source='Dirac_ops/dirac_Factory.cpp' object='dirac_Factory.obj' libtool=no \
	depfile='$(DEPDIR)/dirac_Factory.Po' tmpdepfile='$(DEPDIR)/dirac_Factory.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dirac_Factory.obj `if test -f 'Dirac_ops/dirac_Factory.cpp'; then $(CYGPATH_W) 'Dirac_ops/dirac_Factory.cpp'; else $(CYGPATH_W) '$(srcdir)/Dirac_ops/dirac_Factory.cpp'; fi`

dirac_optimalDomainWall.o: Dirac_ops/dirac_optimalDomainWall.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dirac_optimalDomainWall.o -MD -MP -MF "$(DEPDIR)/dirac_optimalDomainWall.Tpo" -c -o dirac_optimalDomainWall.o `test -f 'Dirac_ops/dirac_optimalDomainWall.cpp' || echo '$(srcdir)/'`Dirac_ops/dirac_optimalDomainWall.cpp; \
#	then mv -f "$(DEPDIR)/dirac_optimalDomainWall.Tpo" "$(DEPDIR)/dirac_optimalDomainWall.Po"; else rm -f "$(DEPDIR)/dirac_optimalDomainWall.Tpo"; exit 1; fi
	source='Dirac_ops/dirac_optimalDomainWall.cpp' object='dirac_optimalDomainWall.o' libtool=no \
	depfile='$(DEPDIR)/dirac_optimalDomainWall.Po' tmpdepfile='$(DEPDIR)/dirac_optimalDomainWall.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dirac_optimalDomainWall.o `test -f 'Dirac_ops/dirac_optimalDomainWall.cpp' || echo '$(srcdir)/'`Dirac_ops/dirac_optimalDomainWall.cpp

dirac_optimalDomainWall.obj: Dirac_ops/dirac_optimalDomainWall.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dirac_optimalDomainWall.obj -MD -MP -MF "$(DEPDIR)/dirac_optimalDomainWall.Tpo" -c -o dirac_optimalDomainWall.obj `if test -f 'Dirac_ops/dirac_optimalDomainWall.cpp'; then $(CYGPATH_W) 'Dirac_ops/dirac_optimalDomainWall.cpp'; else $(CYGPATH_W) '$(srcdir)/Dirac_ops/dirac_optimalDomainWall.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/dirac_optimalDomainWall.Tpo" "$(DEPDIR)/dirac_optimalDomainWall.Po"; else rm -f "$(DEPDIR)/dirac_optimalDomainWall.Tpo"; exit 1; fi
	source='Dirac_ops/dirac_optimalDomainWall.cpp' object='dirac_optimalDomainWall.obj' libtool=no \
	depfile='$(DEPDIR)/dirac_optimalDomainWall.Po' tmpdepfile='$(DEPDIR)/dirac_optimalDomainWall.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dirac_optimalDomainWall.obj `if test -f 'Dirac_ops/dirac_optimalDomainWall.cpp'; then $(CYGPATH_W) 'Dirac_ops/dirac_optimalDomainWall.cpp'; else $(CYGPATH_W) '$(srcdir)/Dirac_ops/dirac_optimalDomainWall.cpp'; fi`

dirac_optimalDomainWall_4D.o: Dirac_ops/dirac_optimalDomainWall_4D.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dirac_optimalDomainWall_4D.o -MD -MP -MF "$(DEPDIR)/dirac_optimalDomainWall_4D.Tpo" -c -o dirac_optimalDomainWall_4D.o `test -f 'Dirac_ops/dirac_optimalDomainWall_4D.cpp' || echo '$(srcdir)/'`Dirac_ops/dirac_optimalDomainWall_4D.cpp; \
#	then mv -f "$(DEPDIR)/dirac_optimalDomainWall_4D.Tpo" "$(DEPDIR)/dirac_optimalDomainWall_4D.Po"; else rm -f "$(DEPDIR)/dirac_optimalDomainWall_4D.Tpo"; exit 1; fi
	source='Dirac_ops/dirac_optimalDomainWall_4D.cpp' object='dirac_optimalDomainWall_4D.o' libtool=no \
	depfile='$(DEPDIR)/dirac_optimalDomainWall_4D.Po' tmpdepfile='$(DEPDIR)/dirac_optimalDomainWall_4D.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dirac_optimalDomainWall_4D.o `test -f 'Dirac_ops/dirac_optimalDomainWall_4D.cpp' || echo '$(srcdir)/'`Dirac_ops/dirac_optimalDomainWall_4D.cpp

dirac_optimalDomainWall_4D.obj: Dirac_ops/dirac_optimalDomainWall_4D.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT dirac_optimalDomainWall_4D.obj -MD -MP -MF "$(DEPDIR)/dirac_optimalDomainWall_4D.Tpo" -c -o dirac_optimalDomainWall_4D.obj `if test -f 'Dirac_ops/dirac_optimalDomainWall_4D.cpp'; then $(CYGPATH_W) 'Dirac_ops/dirac_optimalDomainWall_4D.cpp'; else $(CYGPATH_W) '$(srcdir)/Dirac_ops/dirac_optimalDomainWall_4D.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/dirac_optimalDomainWall_4D.Tpo" "$(DEPDIR)/dirac_optimalDomainWall_4D.Po"; else rm -f "$(DEPDIR)/dirac_optimalDomainWall_4D.Tpo"; exit 1; fi
	source='Dirac_ops/dirac_optimalDomainWall_4D.cpp' object='dirac_optimalDomainWall_4D.obj' libtool=no \
	depfile='$(DEPDIR)/dirac_optimalDomainWall_4D.Po' tmpdepfile='$(DEPDIR)/dirac_optimalDomainWall_4D.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o dirac_optimalDomainWall_4D.obj `if test -f 'Dirac_ops/dirac_optimalDomainWall_4D.cpp'; then $(CYGPATH_W) 'Dirac_ops/dirac_optimalDomainWall_4D.cpp'; else $(CYGPATH_W) '$(srcdir)/Dirac_ops/dirac_optimalDomainWall_4D.cpp'; fi`

eigenModes_IRL.o: EigenModes/eigenModes_IRL.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eigenModes_IRL.o -MD -MP -MF "$(DEPDIR)/eigenModes_IRL.Tpo" -c -o eigenModes_IRL.o `test -f 'EigenModes/eigenModes_IRL.cpp' || echo '$(srcdir)/'`EigenModes/eigenModes_IRL.cpp; \
#	then mv -f "$(DEPDIR)/eigenModes_IRL.Tpo" "$(DEPDIR)/eigenModes_IRL.Po"; else rm -f "$(DEPDIR)/eigenModes_IRL.Tpo"; exit 1; fi
	source='EigenModes/eigenModes_IRL.cpp' object='eigenModes_IRL.o' libtool=no \
	depfile='$(DEPDIR)/eigenModes_IRL.Po' tmpdepfile='$(DEPDIR)/eigenModes_IRL.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eigenModes_IRL.o `test -f 'EigenModes/eigenModes_IRL.cpp' || echo '$(srcdir)/'`EigenModes/eigenModes_IRL.cpp

eigenModes_IRL.obj: EigenModes/eigenModes_IRL.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eigenModes_IRL.obj -MD -MP -MF "$(DEPDIR)/eigenModes_IRL.Tpo" -c -o eigenModes_IRL.obj `if test -f 'EigenModes/eigenModes_IRL.cpp'; then $(CYGPATH_W) 'EigenModes/eigenModes_IRL.cpp'; else $(CYGPATH_W) '$(srcdir)/EigenModes/eigenModes_IRL.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/eigenModes_IRL.Tpo" "$(DEPDIR)/eigenModes_IRL.Po"; else rm -f "$(DEPDIR)/eigenModes_IRL.Tpo"; exit 1; fi
	source='EigenModes/eigenModes_IRL.cpp' object='eigenModes_IRL.obj' libtool=no \
	depfile='$(DEPDIR)/eigenModes_IRL.Po' tmpdepfile='$(DEPDIR)/eigenModes_IRL.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eigenModes_IRL.obj `if test -f 'EigenModes/eigenModes_IRL.cpp'; then $(CYGPATH_W) 'EigenModes/eigenModes_IRL.cpp'; else $(CYGPATH_W) '$(srcdir)/EigenModes/eigenModes_IRL.cpp'; fi`

eigenProc_Zolotarev.o: EigenModes/eigenProc_Zolotarev.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eigenProc_Zolotarev.o -MD -MP -MF "$(DEPDIR)/eigenProc_Zolotarev.Tpo" -c -o eigenProc_Zolotarev.o `test -f 'EigenModes/eigenProc_Zolotarev.cpp' || echo '$(srcdir)/'`EigenModes/eigenProc_Zolotarev.cpp; \
#	then mv -f "$(DEPDIR)/eigenProc_Zolotarev.Tpo" "$(DEPDIR)/eigenProc_Zolotarev.Po"; else rm -f "$(DEPDIR)/eigenProc_Zolotarev.Tpo"; exit 1; fi
	source='EigenModes/eigenProc_Zolotarev.cpp' object='eigenProc_Zolotarev.o' libtool=no \
	depfile='$(DEPDIR)/eigenProc_Zolotarev.Po' tmpdepfile='$(DEPDIR)/eigenProc_Zolotarev.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eigenProc_Zolotarev.o `test -f 'EigenModes/eigenProc_Zolotarev.cpp' || echo '$(srcdir)/'`EigenModes/eigenProc_Zolotarev.cpp

eigenProc_Zolotarev.obj: EigenModes/eigenProc_Zolotarev.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT eigenProc_Zolotarev.obj -MD -MP -MF "$(DEPDIR)/eigenProc_Zolotarev.Tpo" -c -o eigenProc_Zolotarev.obj `if test -f 'EigenModes/eigenProc_Zolotarev.cpp'; then $(CYGPATH_W) 'EigenModes/eigenProc_Zolotarev.cpp'; else $(CYGPATH_W) '$(srcdir)/EigenModes/eigenProc_Zolotarev.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/eigenProc_Zolotarev.Tpo" "$(DEPDIR)/eigenProc_Zolotarev.Po"; else rm -f "$(DEPDIR)/eigenProc_Zolotarev.Tpo"; exit 1; fi
	source='EigenModes/eigenProc_Zolotarev.cpp' object='eigenProc_Zolotarev.obj' libtool=no \
	depfile='$(DEPDIR)/eigenProc_Zolotarev.Po' tmpdepfile='$(DEPDIR)/eigenProc_Zolotarev.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o eigenProc_Zolotarev.obj `if test -f 'EigenModes/eigenProc_Zolotarev.cpp'; then $(CYGPATH_W) 'EigenModes/eigenProc_Zolotarev.cpp'; else $(CYGPATH_W) '$(srcdir)/EigenModes/eigenProc_Zolotarev.cpp'; fi`

sortEigen.o: EigenModes/sortEigen.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sortEigen.o -MD -MP -MF "$(DEPDIR)/sortEigen.Tpo" -c -o sortEigen.o `test -f 'EigenModes/sortEigen.cpp' || echo '$(srcdir)/'`EigenModes/sortEigen.cpp; \
#	then mv -f "$(DEPDIR)/sortEigen.Tpo" "$(DEPDIR)/sortEigen.Po"; else rm -f "$(DEPDIR)/sortEigen.Tpo"; exit 1; fi
	source='EigenModes/sortEigen.cpp' object='sortEigen.o' libtool=no \
	depfile='$(DEPDIR)/sortEigen.Po' tmpdepfile='$(DEPDIR)/sortEigen.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sortEigen.o `test -f 'EigenModes/sortEigen.cpp' || echo '$(srcdir)/'`EigenModes/sortEigen.cpp

sortEigen.obj: EigenModes/sortEigen.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sortEigen.obj -MD -MP -MF "$(DEPDIR)/sortEigen.Tpo" -c -o sortEigen.obj `if test -f 'EigenModes/sortEigen.cpp'; then $(CYGPATH_W) 'EigenModes/sortEigen.cpp'; else $(CYGPATH_W) '$(srcdir)/EigenModes/sortEigen.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/sortEigen.Tpo" "$(DEPDIR)/sortEigen.Po"; else rm -f "$(DEPDIR)/sortEigen.Tpo"; exit 1; fi
	source='EigenModes/sortEigen.cpp' object='sortEigen.obj' libtool=no \
	depfile='$(DEPDIR)/sortEigen.Po' tmpdepfile='$(DEPDIR)/sortEigen.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sortEigen.obj `if test -f 'EigenModes/sortEigen.cpp'; then $(CYGPATH_W) 'EigenModes/sortEigen.cpp'; else $(CYGPATH_W) '$(srcdir)/EigenModes/sortEigen.cpp'; fi`

fopr_chebyshev_DdagD.o: EigenModes/fopr_chebyshev_DdagD.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fopr_chebyshev_DdagD.o -MD -MP -MF "$(DEPDIR)/fopr_chebyshev_DdagD.Tpo" -c -o fopr_chebyshev_DdagD.o `test -f 'EigenModes/fopr_chebyshev_DdagD.cpp' || echo '$(srcdir)/'`EigenModes/fopr_chebyshev_DdagD.cpp; \
#	then mv -f "$(DEPDIR)/fopr_chebyshev_DdagD.Tpo" "$(DEPDIR)/fopr_chebyshev_DdagD.Po"; else rm -f "$(DEPDIR)/fopr_chebyshev_DdagD.Tpo"; exit 1; fi
	source='EigenModes/fopr_chebyshev_DdagD.cpp' object='fopr_chebyshev_DdagD.o' libtool=no \
	depfile='$(DEPDIR)/fopr_chebyshev_DdagD.Po' tmpdepfile='$(DEPDIR)/fopr_chebyshev_DdagD.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fopr_chebyshev_DdagD.o `test -f 'EigenModes/fopr_chebyshev_DdagD.cpp' || echo '$(srcdir)/'`EigenModes/fopr_chebyshev_DdagD.cpp

fopr_chebyshev_DdagD.obj: EigenModes/fopr_chebyshev_DdagD.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fopr_chebyshev_DdagD.obj -MD -MP -MF "$(DEPDIR)/fopr_chebyshev_DdagD.Tpo" -c -o fopr_chebyshev_DdagD.obj `if test -f 'EigenModes/fopr_chebyshev_DdagD.cpp'; then $(CYGPATH_W) 'EigenModes/fopr_chebyshev_DdagD.cpp'; else $(CYGPATH_W) '$(srcdir)/EigenModes/fopr_chebyshev_DdagD.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/fopr_chebyshev_DdagD.Tpo" "$(DEPDIR)/fopr_chebyshev_DdagD.Po"; else rm -f "$(DEPDIR)/fopr_chebyshev_DdagD.Tpo"; exit 1; fi
	source='EigenModes/fopr_chebyshev_DdagD.cpp' object='fopr_chebyshev_DdagD.obj' libtool=no \
	depfile='$(DEPDIR)/fopr_chebyshev_DdagD.Po' tmpdepfile='$(DEPDIR)/fopr_chebyshev_DdagD.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fopr_chebyshev_DdagD.obj `if test -f 'EigenModes/fopr_chebyshev_DdagD.cpp'; then $(CYGPATH_W) 'EigenModes/fopr_chebyshev_DdagD.cpp'; else $(CYGPATH_W) '$(srcdir)/EigenModes/fopr_chebyshev_DdagD.cpp'; fi`

solver_BiCGStab.o: Solver/solver_BiCGStab.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT solver_BiCGStab.o -MD -MP -MF "$(DEPDIR)/solver_BiCGStab.Tpo" -c -o solver_BiCGStab.o `test -f 'Solver/solver_BiCGStab.cpp' || echo '$(srcdir)/'`Solver/solver_BiCGStab.cpp; \
#	then mv -f "$(DEPDIR)/solver_BiCGStab.Tpo" "$(DEPDIR)/solver_BiCGStab.Po"; else rm -f "$(DEPDIR)/solver_BiCGStab.Tpo"; exit 1; fi
	source='Solver/solver_BiCGStab.cpp' object='solver_BiCGStab.o' libtool=no \
	depfile='$(DEPDIR)/solver_BiCGStab.Po' tmpdepfile='$(DEPDIR)/solver_BiCGStab.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o solver_BiCGStab.o `test -f 'Solver/solver_BiCGStab.cpp' || echo '$(srcdir)/'`Solver/solver_BiCGStab.cpp

solver_BiCGStab.obj: Solver/solver_BiCGStab.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT solver_BiCGStab.obj -MD -MP -MF "$(DEPDIR)/solver_BiCGStab.Tpo" -c -o solver_BiCGStab.obj `if test -f 'Solver/solver_BiCGStab.cpp'; then $(CYGPATH_W) 'Solver/solver_BiCGStab.cpp'; else $(CYGPATH_W) '$(srcdir)/Solver/solver_BiCGStab.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/solver_BiCGStab.Tpo" "$(DEPDIR)/solver_BiCGStab.Po"; else rm -f "$(DEPDIR)/solver_BiCGStab.Tpo"; exit 1; fi
	source='Solver/solver_BiCGStab.cpp' object='solver_BiCGStab.obj' libtool=no \
	depfile='$(DEPDIR)/solver_BiCGStab.Po' tmpdepfile='$(DEPDIR)/solver_BiCGStab.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o solver_BiCGStab.obj `if test -f 'Solver/solver_BiCGStab.cpp'; then $(CYGPATH_W) 'Solver/solver_BiCGStab.cpp'; else $(CYGPATH_W) '$(srcdir)/Solver/solver_BiCGStab.cpp'; fi`

solver_CG.o: Solver/solver_CG.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT solver_CG.o -MD -MP -MF "$(DEPDIR)/solver_CG.Tpo" -c -o solver_CG.o `test -f 'Solver/solver_CG.cpp' || echo '$(srcdir)/'`Solver/solver_CG.cpp; \
#	then mv -f "$(DEPDIR)/solver_CG.Tpo" "$(DEPDIR)/solver_CG.Po"; else rm -f "$(DEPDIR)/solver_CG.Tpo"; exit 1; fi
	source='Solver/solver_CG.cpp' object='solver_CG.o' libtool=no \
	depfile='$(DEPDIR)/solver_CG.Po' tmpdepfile='$(DEPDIR)/solver_CG.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o solver_CG.o `test -f 'Solver/solver_CG.cpp' || echo '$(srcdir)/'`Solver/solver_CG.cpp

solver_CG.obj: Solver/solver_CG.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT solver_CG.obj -MD -MP -MF "$(DEPDIR)/solver_CG.Tpo" -c -o solver_CG.obj `if test -f 'Solver/solver_CG.cpp'; then $(CYGPATH_W) 'Solver/solver_CG.cpp'; else $(CYGPATH_W) '$(srcdir)/Solver/solver_CG.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/solver_CG.Tpo" "$(DEPDIR)/solver_CG.Po"; else rm -f "$(DEPDIR)/solver_CG.Tpo"; exit 1; fi
	source='Solver/solver_CG.cpp' object='solver_CG.obj' libtool=no \
	depfile='$(DEPDIR)/solver_CG.Po' tmpdepfile='$(DEPDIR)/solver_CG.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o solver_CG.obj `if test -f 'Solver/solver_CG.cpp'; then $(CYGPATH_W) 'Solver/solver_CG.cpp'; else $(CYGPATH_W) '$(srcdir)/Solver/solver_CG.cpp'; fi`

solver_Factory.o: Solver/solver_Factory.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT solver_Factory.o -MD -MP -MF "$(DEPDIR)/solver_Factory.Tpo" -c -o solver_Factory.o `test -f 'Solver/solver_Factory.cpp' || echo '$(srcdir)/'`Solver/solver_Factory.cpp; \
#	then mv -f "$(DEPDIR)/solver_Factory.Tpo" "$(DEPDIR)/solver_Factory.Po"; else rm -f "$(DEPDIR)/solver_Factory.Tpo"; exit 1; fi
	source='Solver/solver_Factory.cpp' object='solver_Factory.o' libtool=no \
	depfile='$(DEPDIR)/solver_Factory.Po' tmpdepfile='$(DEPDIR)/solver_Factory.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o solver_Factory.o `test -f 'Solver/solver_Factory.cpp' || echo '$(srcdir)/'`Solver/solver_Factory.cpp

solver_Factory.obj: Solver/solver_Factory.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT solver_Factory.obj -MD -MP -MF "$(DEPDIR)/solver_Factory.Tpo" -c -o solver_Factory.obj `if test -f 'Solver/solver_Factory.cpp'; then $(CYGPATH_W) 'Solver/solver_Factory.cpp'; else $(CYGPATH_W) '$(srcdir)/Solver/solver_Factory.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/solver_Factory.Tpo" "$(DEPDIR)/solver_Factory.Po"; else rm -f "$(DEPDIR)/solver_Factory.Tpo"; exit 1; fi
	source='Solver/solver_Factory.cpp' object='solver_Factory.obj' libtool=no \
	depfile='$(DEPDIR)/solver_Factory.Po' tmpdepfile='$(DEPDIR)/solver_Factory.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o solver_Factory.obj `if test -f 'Solver/solver_Factory.cpp'; then $(CYGPATH_W) 'Solver/solver_Factory.cpp'; else $(CYGPATH_W) '$(srcdir)/Solver/solver_Factory.cpp'; fi`

multiShiftSolver_CG.o: Solver/multiShiftSolver_CG.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multiShiftSolver_CG.o -MD -MP -MF "$(DEPDIR)/multiShiftSolver_CG.Tpo" -c -o multiShiftSolver_CG.o `test -f 'Solver/multiShiftSolver_CG.cpp' || echo '$(srcdir)/'`Solver/multiShiftSolver_CG.cpp; \
#	then mv -f "$(DEPDIR)/multiShiftSolver_CG.Tpo" "$(DEPDIR)/multiShiftSolver_CG.Po"; else rm -f "$(DEPDIR)/multiShiftSolver_CG.Tpo"; exit 1; fi
	source='Solver/multiShiftSolver_CG.cpp' object='multiShiftSolver_CG.o' libtool=no \
	depfile='$(DEPDIR)/multiShiftSolver_CG.Po' tmpdepfile='$(DEPDIR)/multiShiftSolver_CG.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multiShiftSolver_CG.o `test -f 'Solver/multiShiftSolver_CG.cpp' || echo '$(srcdir)/'`Solver/multiShiftSolver_CG.cpp

multiShiftSolver_CG.obj: Solver/multiShiftSolver_CG.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT multiShiftSolver_CG.obj -MD -MP -MF "$(DEPDIR)/multiShiftSolver_CG.Tpo" -c -o multiShiftSolver_CG.obj `if test -f 'Solver/multiShiftSolver_CG.cpp'; then $(CYGPATH_W) 'Solver/multiShiftSolver_CG.cpp'; else $(CYGPATH_W) '$(srcdir)/Solver/multiShiftSolver_CG.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/multiShiftSolver_CG.Tpo" "$(DEPDIR)/multiShiftSolver_CG.Po"; else rm -f "$(DEPDIR)/multiShiftSolver_CG.Tpo"; exit 1; fi
	source='Solver/multiShiftSolver_CG.cpp' object='multiShiftSolver_CG.obj' libtool=no \
	depfile='$(DEPDIR)/multiShiftSolver_CG.Po' tmpdepfile='$(DEPDIR)/multiShiftSolver_CG.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o multiShiftSolver_CG.obj `if test -f 'Solver/multiShiftSolver_CG.cpp'; then $(CYGPATH_W) 'Solver/multiShiftSolver_CG.cpp'; else $(CYGPATH_W) '$(srcdir)/Solver/multiShiftSolver_CG.cpp'; fi`

hmcGeneral.o: HMC/hmcGeneral.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hmcGeneral.o -MD -MP -MF "$(DEPDIR)/hmcGeneral.Tpo" -c -o hmcGeneral.o `test -f 'HMC/hmcGeneral.cpp' || echo '$(srcdir)/'`HMC/hmcGeneral.cpp; \
#	then mv -f "$(DEPDIR)/hmcGeneral.Tpo" "$(DEPDIR)/hmcGeneral.Po"; else rm -f "$(DEPDIR)/hmcGeneral.Tpo"; exit 1; fi
	source='HMC/hmcGeneral.cpp' object='hmcGeneral.o' libtool=no \
	depfile='$(DEPDIR)/hmcGeneral.Po' tmpdepfile='$(DEPDIR)/hmcGeneral.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hmcGeneral.o `test -f 'HMC/hmcGeneral.cpp' || echo '$(srcdir)/'`HMC/hmcGeneral.cpp

hmcGeneral.obj: HMC/hmcGeneral.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hmcGeneral.obj -MD -MP -MF "$(DEPDIR)/hmcGeneral.Tpo" -c -o hmcGeneral.obj `if test -f 'HMC/hmcGeneral.cpp'; then $(CYGPATH_W) 'HMC/hmcGeneral.cpp'; else $(CYGPATH_W) '$(srcdir)/HMC/hmcGeneral.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/hmcGeneral.Tpo" "$(DEPDIR)/hmcGeneral.Po"; else rm -f "$(DEPDIR)/hmcGeneral.Tpo"; exit 1; fi
	source='HMC/hmcGeneral.cpp' object='hmcGeneral.obj' libtool=no \
	depfile='$(DEPDIR)/hmcGeneral.Po' tmpdepfile='$(DEPDIR)/hmcGeneral.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hmcGeneral.obj `if test -f 'HMC/hmcGeneral.cpp'; then $(CYGPATH_W) 'HMC/hmcGeneral.cpp'; else $(CYGPATH_W) '$(srcdir)/HMC/hmcGeneral.cpp'; fi`

hmcPrms.o: HMC/hmcPrms.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hmcPrms.o -MD -MP -MF "$(DEPDIR)/hmcPrms.Tpo" -c -o hmcPrms.o `test -f 'HMC/hmcPrms.cpp' || echo '$(srcdir)/'`HMC/hmcPrms.cpp; \
#	then mv -f "$(DEPDIR)/hmcPrms.Tpo" "$(DEPDIR)/hmcPrms.Po"; else rm -f "$(DEPDIR)/hmcPrms.Tpo"; exit 1; fi
	source='HMC/hmcPrms.cpp' object='hmcPrms.o' libtool=no \
	depfile='$(DEPDIR)/hmcPrms.Po' tmpdepfile='$(DEPDIR)/hmcPrms.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hmcPrms.o `test -f 'HMC/hmcPrms.cpp' || echo '$(srcdir)/'`HMC/hmcPrms.cpp

hmcPrms.obj: HMC/hmcPrms.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT hmcPrms.obj -MD -MP -MF "$(DEPDIR)/hmcPrms.Tpo" -c -o hmcPrms.obj `if test -f 'HMC/hmcPrms.cpp'; then $(CYGPATH_W) 'HMC/hmcPrms.cpp'; else $(CYGPATH_W) '$(srcdir)/HMC/hmcPrms.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/hmcPrms.Tpo" "$(DEPDIR)/hmcPrms.Po"; else rm -f "$(DEPDIR)/hmcPrms.Tpo"; exit 1; fi
	source='HMC/hmcPrms.cpp' object='hmcPrms.obj' libtool=no \
	depfile='$(DEPDIR)/hmcPrms.Po' tmpdepfile='$(DEPDIR)/hmcPrms.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o hmcPrms.obj `if test -f 'HMC/hmcPrms.cpp'; then $(CYGPATH_W) 'HMC/hmcPrms.cpp'; else $(CYGPATH_W) '$(srcdir)/HMC/hmcPrms.cpp'; fi`

mdExec_leapfrog.o: HMC/mdExec_leapfrog.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mdExec_leapfrog.o -MD -MP -MF "$(DEPDIR)/mdExec_leapfrog.Tpo" -c -o mdExec_leapfrog.o `test -f 'HMC/mdExec_leapfrog.cpp' || echo '$(srcdir)/'`HMC/mdExec_leapfrog.cpp; \
#	then mv -f "$(DEPDIR)/mdExec_leapfrog.Tpo" "$(DEPDIR)/mdExec_leapfrog.Po"; else rm -f "$(DEPDIR)/mdExec_leapfrog.Tpo"; exit 1; fi
	source='HMC/mdExec_leapfrog.cpp' object='mdExec_leapfrog.o' libtool=no \
	depfile='$(DEPDIR)/mdExec_leapfrog.Po' tmpdepfile='$(DEPDIR)/mdExec_leapfrog.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mdExec_leapfrog.o `test -f 'HMC/mdExec_leapfrog.cpp' || echo '$(srcdir)/'`HMC/mdExec_leapfrog.cpp

mdExec_leapfrog.obj: HMC/mdExec_leapfrog.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mdExec_leapfrog.obj -MD -MP -MF "$(DEPDIR)/mdExec_leapfrog.Tpo" -c -o mdExec_leapfrog.obj `if test -f 'HMC/mdExec_leapfrog.cpp'; then $(CYGPATH_W) 'HMC/mdExec_leapfrog.cpp'; else $(CYGPATH_W) '$(srcdir)/HMC/mdExec_leapfrog.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/mdExec_leapfrog.Tpo" "$(DEPDIR)/mdExec_leapfrog.Po"; else rm -f "$(DEPDIR)/mdExec_leapfrog.Tpo"; exit 1; fi
	source='HMC/mdExec_leapfrog.cpp' object='mdExec_leapfrog.obj' libtool=no \
	depfile='$(DEPDIR)/mdExec_leapfrog.Po' tmpdepfile='$(DEPDIR)/mdExec_leapfrog.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mdExec_leapfrog.obj `if test -f 'HMC/mdExec_leapfrog.cpp'; then $(CYGPATH_W) 'HMC/mdExec_leapfrog.cpp'; else $(CYGPATH_W) '$(srcdir)/HMC/mdExec_leapfrog.cpp'; fi`

mdExec_Factory.o: HMC/mdExec_Factory.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mdExec_Factory.o -MD -MP -MF "$(DEPDIR)/mdExec_Factory.Tpo" -c -o mdExec_Factory.o `test -f 'HMC/mdExec_Factory.cpp' || echo '$(srcdir)/'`HMC/mdExec_Factory.cpp; \
#	then mv -f "$(DEPDIR)/mdExec_Factory.Tpo" "$(DEPDIR)/mdExec_Factory.Po"; else rm -f "$(DEPDIR)/mdExec_Factory.Tpo"; exit 1; fi
	source='HMC/mdExec_Factory.cpp' object='mdExec_Factory.o' libtool=no \
	depfile='$(DEPDIR)/mdExec_Factory.Po' tmpdepfile='$(DEPDIR)/mdExec_Factory.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mdExec_Factory.o `test -f 'HMC/mdExec_Factory.cpp' || echo '$(srcdir)/'`HMC/mdExec_Factory.cpp

mdExec_Factory.obj: HMC/mdExec_Factory.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT mdExec_Factory.obj -MD -MP -MF "$(DEPDIR)/mdExec_Factory.Tpo" -c -o mdExec_Factory.obj `if test -f 'HMC/mdExec_Factory.cpp'; then $(CYGPATH_W) 'HMC/mdExec_Factory.cpp'; else $(CYGPATH_W) '$(srcdir)/HMC/mdExec_Factory.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/mdExec_Factory.Tpo" "$(DEPDIR)/mdExec_Factory.Po"; else rm -f "$(DEPDIR)/mdExec_Factory.Tpo"; exit 1; fi
	source='HMC/mdExec_Factory.cpp' object='mdExec_Factory.obj' libtool=no \
	depfile='$(DEPDIR)/mdExec_Factory.Po' tmpdepfile='$(DEPDIR)/mdExec_Factory.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mdExec_Factory.obj `if test -f 'HMC/mdExec_Factory.cpp'; then $(CYGPATH_W) 'HMC/mdExec_Factory.cpp'; else $(CYGPATH_W) '$(srcdir)/HMC/mdExec_Factory.cpp'; fi`

staples.o: Measurements/GaugeM/staples.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT staples.o -MD -MP -MF "$(DEPDIR)/staples.Tpo" -c -o staples.o `test -f 'Measurements/GaugeM/staples.cpp' || echo '$(srcdir)/'`Measurements/GaugeM/staples.cpp; \
#	then mv -f "$(DEPDIR)/staples.Tpo" "$(DEPDIR)/staples.Po"; else rm -f "$(DEPDIR)/staples.Tpo"; exit 1; fi
	source='Measurements/GaugeM/staples.cpp' object='staples.o' libtool=no \
	depfile='$(DEPDIR)/staples.Po' tmpdepfile='$(DEPDIR)/staples.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o staples.o `test -f 'Measurements/GaugeM/staples.cpp' || echo '$(srcdir)/'`Measurements/GaugeM/staples.cpp

staples.obj: Measurements/GaugeM/staples.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT staples.obj -MD -MP -MF "$(DEPDIR)/staples.Tpo" -c -o staples.obj `if test -f 'Measurements/GaugeM/staples.cpp'; then $(CYGPATH_W) 'Measurements/GaugeM/staples.cpp'; else $(CYGPATH_W) '$(srcdir)/Measurements/GaugeM/staples.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/staples.Tpo" "$(DEPDIR)/staples.Po"; else rm -f "$(DEPDIR)/staples.Tpo"; exit 1; fi
	source='Measurements/GaugeM/staples.cpp' object='staples.obj' libtool=no \
	depfile='$(DEPDIR)/staples.Po' tmpdepfile='$(DEPDIR)/staples.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o staples.obj `if test -f 'Measurements/GaugeM/staples.cpp'; then $(CYGPATH_W) 'Measurements/GaugeM/staples.cpp'; else $(CYGPATH_W) '$(srcdir)/Measurements/GaugeM/staples.cpp'; fi`

qprop_MultiShift.o: Measurements/FermionicM/qprop_MultiShift.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qprop_MultiShift.o -MD -MP -MF "$(DEPDIR)/qprop_MultiShift.Tpo" -c -o qprop_MultiShift.o `test -f 'Measurements/FermionicM/qprop_MultiShift.cpp' || echo '$(srcdir)/'`Measurements/FermionicM/qprop_MultiShift.cpp; \
#	then mv -f "$(DEPDIR)/qprop_MultiShift.Tpo" "$(DEPDIR)/qprop_MultiShift.Po"; else rm -f "$(DEPDIR)/qprop_MultiShift.Tpo"; exit 1; fi
	source='Measurements/FermionicM/qprop_MultiShift.cpp' object='qprop_MultiShift.o' libtool=no \
	depfile='$(DEPDIR)/qprop_MultiShift.Po' tmpdepfile='$(DEPDIR)/qprop_MultiShift.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qprop_MultiShift.o `test -f 'Measurements/FermionicM/qprop_MultiShift.cpp' || echo '$(srcdir)/'`Measurements/FermionicM/qprop_MultiShift.cpp

qprop_MultiShift.obj: Measurements/FermionicM/qprop_MultiShift.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qprop_MultiShift.obj -MD -MP -MF "$(DEPDIR)/qprop_MultiShift.Tpo" -c -o qprop_MultiShift.obj `if test -f 'Measurements/FermionicM/qprop_MultiShift.cpp'; then $(CYGPATH_W) 'Measurements/FermionicM/qprop_MultiShift.cpp'; else $(CYGPATH_W) '$(srcdir)/Measurements/FermionicM/qprop_MultiShift.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/qprop_MultiShift.Tpo" "$(DEPDIR)/qprop_MultiShift.Po"; else rm -f "$(DEPDIR)/qprop_MultiShift.Tpo"; exit 1; fi
	source='Measurements/FermionicM/qprop_MultiShift.cpp' object='qprop_MultiShift.obj' libtool=no \
	depfile='$(DEPDIR)/qprop_MultiShift.Po' tmpdepfile='$(DEPDIR)/qprop_MultiShift.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qprop_MultiShift.obj `if test -f 'Measurements/FermionicM/qprop_MultiShift.cpp'; then $(CYGPATH_W) 'Measurements/FermionicM/qprop_MultiShift.cpp'; else $(CYGPATH_W) '$(srcdir)/Measurements/FermionicM/qprop_MultiShift.cpp'; fi`

qprop.o: Measurements/FermionicM/qprop.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qprop.o -MD -MP -MF "$(DEPDIR)/qprop.Tpo" -c -o qprop.o `test -f 'Measurements/FermionicM/qprop.cpp' || echo '$(srcdir)/'`Measurements/FermionicM/qprop.cpp; \
#	then mv -f "$(DEPDIR)/qprop.Tpo" "$(DEPDIR)/qprop.Po"; else rm -f "$(DEPDIR)/qprop.Tpo"; exit 1; fi
	source='Measurements/FermionicM/qprop.cpp' object='qprop.o' libtool=no \
	depfile='$(DEPDIR)/qprop.Po' tmpdepfile='$(DEPDIR)/qprop.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qprop.o `test -f 'Measurements/FermionicM/qprop.cpp' || echo '$(srcdir)/'`Measurements/FermionicM/qprop.cpp

qprop.obj: Measurements/FermionicM/qprop.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qprop.obj -MD -MP -MF "$(DEPDIR)/qprop.Tpo" -c -o qprop.obj `if test -f 'Measurements/FermionicM/qprop.cpp'; then $(CYGPATH_W) 'Measurements/FermionicM/qprop.cpp'; else $(CYGPATH_W) '$(srcdir)/Measurements/FermionicM/qprop.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/qprop.Tpo" "$(DEPDIR)/qprop.Po"; else rm -f "$(DEPDIR)/qprop.Tpo"; exit 1; fi
	source='Measurements/FermionicM/qprop.cpp' object='qprop.obj' libtool=no \
	depfile='$(DEPDIR)/qprop.Po' tmpdepfile='$(DEPDIR)/qprop.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qprop.obj `if test -f 'Measurements/FermionicM/qprop.cpp'; then $(CYGPATH_W) 'Measurements/FermionicM/qprop.cpp'; else $(CYGPATH_W) '$(srcdir)/Measurements/FermionicM/qprop.cpp'; fi`

qprop_EvenOdd.o: Measurements/FermionicM/qprop_EvenOdd.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qprop_EvenOdd.o -MD -MP -MF "$(DEPDIR)/qprop_EvenOdd.Tpo" -c -o qprop_EvenOdd.o `test -f 'Measurements/FermionicM/qprop_EvenOdd.cpp' || echo '$(srcdir)/'`Measurements/FermionicM/qprop_EvenOdd.cpp; \
#	then mv -f "$(DEPDIR)/qprop_EvenOdd.Tpo" "$(DEPDIR)/qprop_EvenOdd.Po"; else rm -f "$(DEPDIR)/qprop_EvenOdd.Tpo"; exit 1; fi
	source='Measurements/FermionicM/qprop_EvenOdd.cpp' object='qprop_EvenOdd.o' libtool=no \
	depfile='$(DEPDIR)/qprop_EvenOdd.Po' tmpdepfile='$(DEPDIR)/qprop_EvenOdd.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qprop_EvenOdd.o `test -f 'Measurements/FermionicM/qprop_EvenOdd.cpp' || echo '$(srcdir)/'`Measurements/FermionicM/qprop_EvenOdd.cpp

qprop_EvenOdd.obj: Measurements/FermionicM/qprop_EvenOdd.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qprop_EvenOdd.obj -MD -MP -MF "$(DEPDIR)/qprop_EvenOdd.Tpo" -c -o qprop_EvenOdd.obj `if test -f 'Measurements/FermionicM/qprop_EvenOdd.cpp'; then $(CYGPATH_W) 'Measurements/FermionicM/qprop_EvenOdd.cpp'; else $(CYGPATH_W) '$(srcdir)/Measurements/FermionicM/qprop_EvenOdd.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/qprop_EvenOdd.Tpo" "$(DEPDIR)/qprop_EvenOdd.Po"; else rm -f "$(DEPDIR)/qprop_EvenOdd.Tpo"; exit 1; fi
	source='Measurements/FermionicM/qprop_EvenOdd.cpp' object='qprop_EvenOdd.obj' libtool=no \
	depfile='$(DEPDIR)/qprop_EvenOdd.Po' tmpdepfile='$(DEPDIR)/qprop_EvenOdd.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qprop_EvenOdd.obj `if test -f 'Measurements/FermionicM/qprop_EvenOdd.cpp'; then $(CYGPATH_W) 'Measurements/FermionicM/qprop_EvenOdd.cpp'; else $(CYGPATH_W) '$(srcdir)/Measurements/FermionicM/qprop_EvenOdd.cpp'; fi`

qprop_optimalDomainWall.o: Measurements/FermionicM/qprop_optimalDomainWall.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qprop_optimalDomainWall.o -MD -MP -MF "$(DEPDIR)/qprop_optimalDomainWall.Tpo" -c -o qprop_optimalDomainWall.o `test -f 'Measurements/FermionicM/qprop_optimalDomainWall.cpp' || echo '$(srcdir)/'`Measurements/FermionicM/qprop_optimalDomainWall.cpp; \
#	then mv -f "$(DEPDIR)/qprop_optimalDomainWall.Tpo" "$(DEPDIR)/qprop_optimalDomainWall.Po"; else rm -f "$(DEPDIR)/qprop_optimalDomainWall.Tpo"; exit 1; fi
	source='Measurements/FermionicM/qprop_optimalDomainWall.cpp' object='qprop_optimalDomainWall.o' libtool=no \
	depfile='$(DEPDIR)/qprop_optimalDomainWall.Po' tmpdepfile='$(DEPDIR)/qprop_optimalDomainWall.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qprop_optimalDomainWall.o `test -f 'Measurements/FermionicM/qprop_optimalDomainWall.cpp' || echo '$(srcdir)/'`Measurements/FermionicM/qprop_optimalDomainWall.cpp

qprop_optimalDomainWall.obj: Measurements/FermionicM/qprop_optimalDomainWall.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT qprop_optimalDomainWall.obj -MD -MP -MF "$(DEPDIR)/qprop_optimalDomainWall.Tpo" -c -o qprop_optimalDomainWall.obj `if test -f 'Measurements/FermionicM/qprop_optimalDomainWall.cpp'; then $(CYGPATH_W) 'Measurements/FermionicM/qprop_optimalDomainWall.cpp'; else $(CYGPATH_W) '$(srcdir)/Measurements/FermionicM/qprop_optimalDomainWall.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/qprop_optimalDomainWall.Tpo" "$(DEPDIR)/qprop_optimalDomainWall.Po"; else rm -f "$(DEPDIR)/qprop_optimalDomainWall.Tpo"; exit 1; fi
	source='Measurements/FermionicM/qprop_optimalDomainWall.cpp' object='qprop_optimalDomainWall.obj' libtool=no \
	depfile='$(DEPDIR)/qprop_optimalDomainWall.Po' tmpdepfile='$(DEPDIR)/qprop_optimalDomainWall.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o qprop_optimalDomainWall.obj `if test -f 'Measurements/FermionicM/qprop_optimalDomainWall.cpp'; then $(CYGPATH_W) 'Measurements/FermionicM/qprop_optimalDomainWall.cpp'; else $(CYGPATH_W) '$(srcdir)/Measurements/FermionicM/qprop_optimalDomainWall.cpp'; fi`

fermion_meas_factory.o: Measurements/FermionicM/fermion_meas_factory.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fermion_meas_factory.o -MD -MP -MF "$(DEPDIR)/fermion_meas_factory.Tpo" -c -o fermion_meas_factory.o `test -f 'Measurements/FermionicM/fermion_meas_factory.cpp' || echo '$(srcdir)/'`Measurements/FermionicM/fermion_meas_factory.cpp; \
#	then mv -f "$(DEPDIR)/fermion_meas_factory.Tpo" "$(DEPDIR)/fermion_meas_factory.Po"; else rm -f "$(DEPDIR)/fermion_meas_factory.Tpo"; exit 1; fi
	source='Measurements/FermionicM/fermion_meas_factory.cpp' object='fermion_meas_factory.o' libtool=no \
	depfile='$(DEPDIR)/fermion_meas_factory.Po' tmpdepfile='$(DEPDIR)/fermion_meas_factory.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fermion_meas_factory.o `test -f 'Measurements/FermionicM/fermion_meas_factory.cpp' || echo '$(srcdir)/'`Measurements/FermionicM/fermion_meas_factory.cpp

fermion_meas_factory.obj: Measurements/FermionicM/fermion_meas_factory.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT fermion_meas_factory.obj -MD -MP -MF "$(DEPDIR)/fermion_meas_factory.Tpo" -c -o fermion_meas_factory.obj `if test -f 'Measurements/FermionicM/fermion_meas_factory.cpp'; then $(CYGPATH_W) 'Measurements/FermionicM/fermion_meas_factory.cpp'; else $(CYGPATH_W) '$(srcdir)/Measurements/FermionicM/fermion_meas_factory.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/fermion_meas_factory.Tpo" "$(DEPDIR)/fermion_meas_factory.Po"; else rm -f "$(DEPDIR)/fermion_meas_factory.Tpo"; exit 1; fi
	source='Measurements/FermionicM/fermion_meas_factory.cpp' object='fermion_meas_factory.obj' libtool=no \
	depfile='$(DEPDIR)/fermion_meas_factory.Po' tmpdepfile='$(DEPDIR)/fermion_meas_factory.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o fermion_meas_factory.obj `if test -f 'Measurements/FermionicM/fermion_meas_factory.cpp'; then $(CYGPATH_W) 'Measurements/FermionicM/fermion_meas_factory.cpp'; else $(CYGPATH_W) '$(srcdir)/Measurements/FermionicM/fermion_meas_factory.cpp'; fi`

commonPrms.o: Main/commonPrms.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT commonPrms.o -MD -MP -MF "$(DEPDIR)/commonPrms.Tpo" -c -o commonPrms.o `test -f 'Main/commonPrms.cpp' || echo '$(srcdir)/'`Main/commonPrms.cpp; \
#	then mv -f "$(DEPDIR)/commonPrms.Tpo" "$(DEPDIR)/commonPrms.Po"; else rm -f "$(DEPDIR)/commonPrms.Tpo"; exit 1; fi
	source='Main/commonPrms.cpp' object='commonPrms.o' libtool=no \
	depfile='$(DEPDIR)/commonPrms.Po' tmpdepfile='$(DEPDIR)/commonPrms.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o commonPrms.o `test -f 'Main/commonPrms.cpp' || echo '$(srcdir)/'`Main/commonPrms.cpp

commonPrms.obj: Main/commonPrms.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT commonPrms.obj -MD -MP -MF "$(DEPDIR)/commonPrms.Tpo" -c -o commonPrms.obj `if test -f 'Main/commonPrms.cpp'; then $(CYGPATH_W) 'Main/commonPrms.cpp'; else $(CYGPATH_W) '$(srcdir)/Main/commonPrms.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/commonPrms.Tpo" "$(DEPDIR)/commonPrms.Po"; else rm -f "$(DEPDIR)/commonPrms.Tpo"; exit 1; fi
	source='Main/commonPrms.cpp' object='commonPrms.obj' libtool=no \
	depfile='$(DEPDIR)/commonPrms.Po' tmpdepfile='$(DEPDIR)/commonPrms.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o commonPrms.obj `if test -f 'Main/commonPrms.cpp'; then $(CYGPATH_W) 'Main/commonPrms.cpp'; else $(CYGPATH_W) '$(srcdir)/Main/commonPrms.cpp'; fi`

siteIndex.o: Main/Geometry/siteIndex.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT siteIndex.o -MD -MP -MF "$(DEPDIR)/siteIndex.Tpo" -c -o siteIndex.o `test -f 'Main/Geometry/siteIndex.cpp' || echo '$(srcdir)/'`Main/Geometry/siteIndex.cpp; \
#	then mv -f "$(DEPDIR)/siteIndex.Tpo" "$(DEPDIR)/siteIndex.Po"; else rm -f "$(DEPDIR)/siteIndex.Tpo"; exit 1; fi
	source='Main/Geometry/siteIndex.cpp' object='siteIndex.o' libtool=no \
	depfile='$(DEPDIR)/siteIndex.Po' tmpdepfile='$(DEPDIR)/siteIndex.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o siteIndex.o `test -f 'Main/Geometry/siteIndex.cpp' || echo '$(srcdir)/'`Main/Geometry/siteIndex.cpp

siteIndex.obj: Main/Geometry/siteIndex.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT siteIndex.obj -MD -MP -MF "$(DEPDIR)/siteIndex.Tpo" -c -o siteIndex.obj `if test -f 'Main/Geometry/siteIndex.cpp'; then $(CYGPATH_W) 'Main/Geometry/siteIndex.cpp'; else $(CYGPATH_W) '$(srcdir)/Main/Geometry/siteIndex.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/siteIndex.Tpo" "$(DEPDIR)/siteIndex.Po"; else rm -f "$(DEPDIR)/siteIndex.Tpo"; exit 1; fi
	source='Main/Geometry/siteIndex.cpp' object='siteIndex.obj' libtool=no \
	depfile='$(DEPDIR)/siteIndex.Po' tmpdepfile='$(DEPDIR)/siteIndex.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o siteIndex.obj `if test -f 'Main/Geometry/siteIndex.cpp'; then $(CYGPATH_W) 'Main/Geometry/siteIndex.cpp'; else $(CYGPATH_W) '$(srcdir)/Main/Geometry/siteIndex.cpp'; fi`

siteIndex_eo.o: Main/Geometry/siteIndex_eo.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT siteIndex_eo.o -MD -MP -MF "$(DEPDIR)/siteIndex_eo.Tpo" -c -o siteIndex_eo.o `test -f 'Main/Geometry/siteIndex_eo.cpp' || echo '$(srcdir)/'`Main/Geometry/siteIndex_eo.cpp; \
#	then mv -f "$(DEPDIR)/siteIndex_eo.Tpo" "$(DEPDIR)/siteIndex_eo.Po"; else rm -f "$(DEPDIR)/siteIndex_eo.Tpo"; exit 1; fi
	source='Main/Geometry/siteIndex_eo.cpp' object='siteIndex_eo.o' libtool=no \
	depfile='$(DEPDIR)/siteIndex_eo.Po' tmpdepfile='$(DEPDIR)/siteIndex_eo.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o siteIndex_eo.o `test -f 'Main/Geometry/siteIndex_eo.cpp' || echo '$(srcdir)/'`Main/Geometry/siteIndex_eo.cpp

siteIndex_eo.obj: Main/Geometry/siteIndex_eo.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT siteIndex_eo.obj -MD -MP -MF "$(DEPDIR)/siteIndex_eo.Tpo" -c -o siteIndex_eo.obj `if test -f 'Main/Geometry/siteIndex_eo.cpp'; then $(CYGPATH_W) 'Main/Geometry/siteIndex_eo.cpp'; else $(CYGPATH_W) '$(srcdir)/Main/Geometry/siteIndex_eo.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/siteIndex_eo.Tpo" "$(DEPDIR)/siteIndex_eo.Po"; else rm -f "$(DEPDIR)/siteIndex_eo.Tpo"; exit 1; fi
	source='Main/Geometry/siteIndex_eo.cpp' object='siteIndex_eo.obj' libtool=no \
	depfile='$(DEPDIR)/siteIndex_eo.Po' tmpdepfile='$(DEPDIR)/siteIndex_eo.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o siteIndex_eo.obj `if test -f 'Main/Geometry/siteIndex_eo.cpp'; then $(CYGPATH_W) 'Main/Geometry/siteIndex_eo.cpp'; else $(CYGPATH_W) '$(srcdir)/Main/Geometry/siteIndex_eo.cpp'; fi`

gaugeConf.o: Main/gaugeConf.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gaugeConf.o -MD -MP -MF "$(DEPDIR)/gaugeConf.Tpo" -c -o gaugeConf.o `test -f 'Main/gaugeConf.cpp' || echo '$(srcdir)/'`Main/gaugeConf.cpp; \
#	then mv -f "$(DEPDIR)/gaugeConf.Tpo" "$(DEPDIR)/gaugeConf.Po"; else rm -f "$(DEPDIR)/gaugeConf.Tpo"; exit 1; fi
	source='Main/gaugeConf.cpp' object='gaugeConf.o' libtool=no \
	depfile='$(DEPDIR)/gaugeConf.Po' tmpdepfile='$(DEPDIR)/gaugeConf.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gaugeConf.o `test -f 'Main/gaugeConf.cpp' || echo '$(srcdir)/'`Main/gaugeConf.cpp

gaugeConf.obj: Main/gaugeConf.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT gaugeConf.obj -MD -MP -MF "$(DEPDIR)/gaugeConf.Tpo" -c -o gaugeConf.obj `if test -f 'Main/gaugeConf.cpp'; then $(CYGPATH_W) 'Main/gaugeConf.cpp'; else $(CYGPATH_W) '$(srcdir)/Main/gaugeConf.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/gaugeConf.Tpo" "$(DEPDIR)/gaugeConf.Po"; else rm -f "$(DEPDIR)/gaugeConf.Tpo"; exit 1; fi
	source='Main/gaugeConf.cpp' object='gaugeConf.obj' libtool=no \
	depfile='$(DEPDIR)/gaugeConf.Po' tmpdepfile='$(DEPDIR)/gaugeConf.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gaugeConf.obj `if test -f 'Main/gaugeConf.cpp'; then $(CYGPATH_W) 'Main/gaugeConf.cpp'; else $(CYGPATH_W) '$(srcdir)/Main/gaugeConf.cpp'; fi`

pugixml.o: PugiXML/pugixml.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pugixml.o -MD -MP -MF "$(DEPDIR)/pugixml.Tpo" -c -o pugixml.o `test -f 'PugiXML/pugixml.cpp' || echo '$(srcdir)/'`PugiXML/pugixml.cpp; \
#	then mv -f "$(DEPDIR)/pugixml.Tpo" "$(DEPDIR)/pugixml.Po"; else rm -f "$(DEPDIR)/pugixml.Tpo"; exit 1; fi
	source='PugiXML/pugixml.cpp' object='pugixml.o' libtool=no \
	depfile='$(DEPDIR)/pugixml.Po' tmpdepfile='$(DEPDIR)/pugixml.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pugixml.o `test -f 'PugiXML/pugixml.cpp' || echo '$(srcdir)/'`PugiXML/pugixml.cpp

pugixml.obj: PugiXML/pugixml.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pugixml.obj -MD -MP -MF "$(DEPDIR)/pugixml.Tpo" -c -o pugixml.obj `if test -f 'PugiXML/pugixml.cpp'; then $(CYGPATH_W) 'PugiXML/pugixml.cpp'; else $(CYGPATH_W) '$(srcdir)/PugiXML/pugixml.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/pugixml.Tpo" "$(DEPDIR)/pugixml.Po"; else rm -f "$(DEPDIR)/pugixml.Tpo"; exit 1; fi
	source='PugiXML/pugixml.cpp' object='pugixml.obj' libtool=no \
	depfile='$(DEPDIR)/pugixml.Po' tmpdepfile='$(DEPDIR)/pugixml.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pugixml.obj `if test -f 'PugiXML/pugixml.cpp'; then $(CYGPATH_W) 'PugiXML/pugixml.cpp'; else $(CYGPATH_W) '$(srcdir)/PugiXML/pugixml.cpp'; fi`

pugi_interface.o: PugiXML/pugi_interface.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pugi_interface.o -MD -MP -MF "$(DEPDIR)/pugi_interface.Tpo" -c -o pugi_interface.o `test -f 'PugiXML/pugi_interface.cpp' || echo '$(srcdir)/'`PugiXML/pugi_interface.cpp; \
#	then mv -f "$(DEPDIR)/pugi_interface.Tpo" "$(DEPDIR)/pugi_interface.Po"; else rm -f "$(DEPDIR)/pugi_interface.Tpo"; exit 1; fi
	source='PugiXML/pugi_interface.cpp' object='pugi_interface.o' libtool=no \
	depfile='$(DEPDIR)/pugi_interface.Po' tmpdepfile='$(DEPDIR)/pugi_interface.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pugi_interface.o `test -f 'PugiXML/pugi_interface.cpp' || echo '$(srcdir)/'`PugiXML/pugi_interface.cpp

pugi_interface.obj: PugiXML/pugi_interface.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT pugi_interface.obj -MD -MP -MF "$(DEPDIR)/pugi_interface.Tpo" -c -o pugi_interface.obj `if test -f 'PugiXML/pugi_interface.cpp'; then $(CYGPATH_W) 'PugiXML/pugi_interface.cpp'; else $(CYGPATH_W) '$(srcdir)/PugiXML/pugi_interface.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/pugi_interface.Tpo" "$(DEPDIR)/pugi_interface.Po"; else rm -f "$(DEPDIR)/pugi_interface.Tpo"; exit 1; fi
	source='PugiXML/pugi_interface.cpp' object='pugi_interface.obj' libtool=no \
	depfile='$(DEPDIR)/pugi_interface.Po' tmpdepfile='$(DEPDIR)/pugi_interface.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o pugi_interface.obj `if test -f 'PugiXML/pugi_interface.cpp'; then $(CYGPATH_W) 'PugiXML/pugi_interface.cpp'; else $(CYGPATH_W) '$(srcdir)/PugiXML/pugi_interface.cpp'; fi`

randNum_MT19937.o: Tools/randNum_MT19937.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT randNum_MT19937.o -MD -MP -MF "$(DEPDIR)/randNum_MT19937.Tpo" -c -o randNum_MT19937.o `test -f 'Tools/randNum_MT19937.cpp' || echo '$(srcdir)/'`Tools/randNum_MT19937.cpp; \
#	then mv -f "$(DEPDIR)/randNum_MT19937.Tpo" "$(DEPDIR)/randNum_MT19937.Po"; else rm -f "$(DEPDIR)/randNum_MT19937.Tpo"; exit 1; fi
	source='Tools/randNum_MT19937.cpp' object='randNum_MT19937.o' libtool=no \
	depfile='$(DEPDIR)/randNum_MT19937.Po' tmpdepfile='$(DEPDIR)/randNum_MT19937.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o randNum_MT19937.o `test -f 'Tools/randNum_MT19937.cpp' || echo '$(srcdir)/'`Tools/randNum_MT19937.cpp

randNum_MT19937.obj: Tools/randNum_MT19937.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT randNum_MT19937.obj -MD -MP -MF "$(DEPDIR)/randNum_MT19937.Tpo" -c -o randNum_MT19937.obj `if test -f 'Tools/randNum_MT19937.cpp'; then $(CYGPATH_W) 'Tools/randNum_MT19937.cpp'; else $(CYGPATH_W) '$(srcdir)/Tools/randNum_MT19937.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/randNum_MT19937.Tpo" "$(DEPDIR)/randNum_MT19937.Po"; else rm -f "$(DEPDIR)/randNum_MT19937.Tpo"; exit 1; fi
	source='Tools/randNum_MT19937.cpp' object='randNum_MT19937.obj' libtool=no \
	depfile='$(DEPDIR)/randNum_MT19937.Po' tmpdepfile='$(DEPDIR)/randNum_MT19937.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o randNum_MT19937.obj `if test -f 'Tools/randNum_MT19937.cpp'; then $(CYGPATH_W) 'Tools/randNum_MT19937.cpp'; else $(CYGPATH_W) '$(srcdir)/Tools/randNum_MT19937.cpp'; fi`

randNum_Factory.o: Tools/randNum_Factory.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT randNum_Factory.o -MD -MP -MF "$(DEPDIR)/randNum_Factory.Tpo" -c -o randNum_Factory.o `test -f 'Tools/randNum_Factory.cpp' || echo '$(srcdir)/'`Tools/randNum_Factory.cpp; \
#	then mv -f "$(DEPDIR)/randNum_Factory.Tpo" "$(DEPDIR)/randNum_Factory.Po"; else rm -f "$(DEPDIR)/randNum_Factory.Tpo"; exit 1; fi
	source='Tools/randNum_Factory.cpp' object='randNum_Factory.o' libtool=no \
	depfile='$(DEPDIR)/randNum_Factory.Po' tmpdepfile='$(DEPDIR)/randNum_Factory.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o randNum_Factory.o `test -f 'Tools/randNum_Factory.cpp' || echo '$(srcdir)/'`Tools/randNum_Factory.cpp

randNum_Factory.obj: Tools/randNum_Factory.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT randNum_Factory.obj -MD -MP -MF "$(DEPDIR)/randNum_Factory.Tpo" -c -o randNum_Factory.obj `if test -f 'Tools/randNum_Factory.cpp'; then $(CYGPATH_W) 'Tools/randNum_Factory.cpp'; else $(CYGPATH_W) '$(srcdir)/Tools/randNum_Factory.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/randNum_Factory.Tpo" "$(DEPDIR)/randNum_Factory.Po"; else rm -f "$(DEPDIR)/randNum_Factory.Tpo"; exit 1; fi
	source='Tools/randNum_Factory.cpp' object='randNum_Factory.obj' libtool=no \
	depfile='$(DEPDIR)/randNum_Factory.Po' tmpdepfile='$(DEPDIR)/randNum_Factory.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o randNum_Factory.obj `if test -f 'Tools/randNum_Factory.cpp'; then $(CYGPATH_W) 'Tools/randNum_Factory.cpp'; else $(CYGPATH_W) '$(srcdir)/Tools/randNum_Factory.cpp'; fi`

sunMat.o: Tools/sunMat.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sunMat.o -MD -MP -MF "$(DEPDIR)/sunMat.Tpo" -c -o sunMat.o `test -f 'Tools/sunMat.cpp' || echo '$(srcdir)/'`Tools/sunMat.cpp; \
#	then mv -f "$(DEPDIR)/sunMat.Tpo" "$(DEPDIR)/sunMat.Po"; else rm -f "$(DEPDIR)/sunMat.Tpo"; exit 1; fi
	source='Tools/sunMat.cpp' object='sunMat.o' libtool=no \
	depfile='$(DEPDIR)/sunMat.Po' tmpdepfile='$(DEPDIR)/sunMat.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sunMat.o `test -f 'Tools/sunMat.cpp' || echo '$(srcdir)/'`Tools/sunMat.cpp

sunMat.obj: Tools/sunMat.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT sunMat.obj -MD -MP -MF "$(DEPDIR)/sunMat.Tpo" -c -o sunMat.obj `if test -f 'Tools/sunMat.cpp'; then $(CYGPATH_W) 'Tools/sunMat.cpp'; else $(CYGPATH_W) '$(srcdir)/Tools/sunMat.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/sunMat.Tpo" "$(DEPDIR)/sunMat.Po"; else rm -f "$(DEPDIR)/sunMat.Tpo"; exit 1; fi
	source='Tools/sunMat.cpp' object='sunMat.obj' libtool=no \
	depfile='$(DEPDIR)/sunMat.Po' tmpdepfile='$(DEPDIR)/sunMat.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o sunMat.obj `if test -f 'Tools/sunMat.cpp'; then $(CYGPATH_W) 'Tools/sunMat.cpp'; else $(CYGPATH_W) '$(srcdir)/Tools/sunMat.cpp'; fi`

test_Gauge.o: Test/test_Gauge.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_Gauge.o -MD -MP -MF "$(DEPDIR)/test_Gauge.Tpo" -c -o test_Gauge.o `test -f 'Test/test_Gauge.cpp' || echo '$(srcdir)/'`Test/test_Gauge.cpp; \
#	then mv -f "$(DEPDIR)/test_Gauge.Tpo" "$(DEPDIR)/test_Gauge.Po"; else rm -f "$(DEPDIR)/test_Gauge.Tpo"; exit 1; fi
	source='Test/test_Gauge.cpp' object='test_Gauge.o' libtool=no \
	depfile='$(DEPDIR)/test_Gauge.Po' tmpdepfile='$(DEPDIR)/test_Gauge.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_Gauge.o `test -f 'Test/test_Gauge.cpp' || echo '$(srcdir)/'`Test/test_Gauge.cpp

test_Gauge.obj: Test/test_Gauge.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_Gauge.obj -MD -MP -MF "$(DEPDIR)/test_Gauge.Tpo" -c -o test_Gauge.obj `if test -f 'Test/test_Gauge.cpp'; then $(CYGPATH_W) 'Test/test_Gauge.cpp'; else $(CYGPATH_W) '$(srcdir)/Test/test_Gauge.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/test_Gauge.Tpo" "$(DEPDIR)/test_Gauge.Po"; else rm -f "$(DEPDIR)/test_Gauge.Tpo"; exit 1; fi
	source='Test/test_Gauge.cpp' object='test_Gauge.obj' libtool=no \
	depfile='$(DEPDIR)/test_Gauge.Po' tmpdepfile='$(DEPDIR)/test_Gauge.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_Gauge.obj `if test -f 'Test/test_Gauge.cpp'; then $(CYGPATH_W) 'Test/test_Gauge.cpp'; else $(CYGPATH_W) '$(srcdir)/Test/test_Gauge.cpp'; fi`

test_EigenModes_IRL.o: Test/test_EigenModes_IRL.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_EigenModes_IRL.o -MD -MP -MF "$(DEPDIR)/test_EigenModes_IRL.Tpo" -c -o test_EigenModes_IRL.o `test -f 'Test/test_EigenModes_IRL.cpp' || echo '$(srcdir)/'`Test/test_EigenModes_IRL.cpp; \
#	then mv -f "$(DEPDIR)/test_EigenModes_IRL.Tpo" "$(DEPDIR)/test_EigenModes_IRL.Po"; else rm -f "$(DEPDIR)/test_EigenModes_IRL.Tpo"; exit 1; fi
	source='Test/test_EigenModes_IRL.cpp' object='test_EigenModes_IRL.o' libtool=no \
	depfile='$(DEPDIR)/test_EigenModes_IRL.Po' tmpdepfile='$(DEPDIR)/test_EigenModes_IRL.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_EigenModes_IRL.o `test -f 'Test/test_EigenModes_IRL.cpp' || echo '$(srcdir)/'`Test/test_EigenModes_IRL.cpp

test_EigenModes_IRL.obj: Test/test_EigenModes_IRL.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_EigenModes_IRL.obj -MD -MP -MF "$(DEPDIR)/test_EigenModes_IRL.Tpo" -c -o test_EigenModes_IRL.obj `if test -f 'Test/test_EigenModes_IRL.cpp'; then $(CYGPATH_W) 'Test/test_EigenModes_IRL.cpp'; else $(CYGPATH_W) '$(srcdir)/Test/test_EigenModes_IRL.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/test_EigenModes_IRL.Tpo" "$(DEPDIR)/test_EigenModes_IRL.Po"; else rm -f "$(DEPDIR)/test_EigenModes_IRL.Tpo"; exit 1; fi
	source='Test/test_EigenModes_IRL.cpp' object='test_EigenModes_IRL.obj' libtool=no \
	depfile='$(DEPDIR)/test_EigenModes_IRL.Po' tmpdepfile='$(DEPDIR)/test_EigenModes_IRL.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_EigenModes_IRL.obj `if test -f 'Test/test_EigenModes_IRL.cpp'; then $(CYGPATH_W) 'Test/test_EigenModes_IRL.cpp'; else $(CYGPATH_W) '$(srcdir)/Test/test_EigenModes_IRL.cpp'; fi`

test_MultiShiftSolver.o: Test/test_MultiShiftSolver.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_MultiShiftSolver.o -MD -MP -MF "$(DEPDIR)/test_MultiShiftSolver.Tpo" -c -o test_MultiShiftSolver.o `test -f 'Test/test_MultiShiftSolver.cpp' || echo '$(srcdir)/'`Test/test_MultiShiftSolver.cpp; \
#	then mv -f "$(DEPDIR)/test_MultiShiftSolver.Tpo" "$(DEPDIR)/test_MultiShiftSolver.Po"; else rm -f "$(DEPDIR)/test_MultiShiftSolver.Tpo"; exit 1; fi
	source='Test/test_MultiShiftSolver.cpp' object='test_MultiShiftSolver.o' libtool=no \
	depfile='$(DEPDIR)/test_MultiShiftSolver.Po' tmpdepfile='$(DEPDIR)/test_MultiShiftSolver.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_MultiShiftSolver.o `test -f 'Test/test_MultiShiftSolver.cpp' || echo '$(srcdir)/'`Test/test_MultiShiftSolver.cpp

test_MultiShiftSolver.obj: Test/test_MultiShiftSolver.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_MultiShiftSolver.obj -MD -MP -MF "$(DEPDIR)/test_MultiShiftSolver.Tpo" -c -o test_MultiShiftSolver.obj `if test -f 'Test/test_MultiShiftSolver.cpp'; then $(CYGPATH_W) 'Test/test_MultiShiftSolver.cpp'; else $(CYGPATH_W) '$(srcdir)/Test/test_MultiShiftSolver.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/test_MultiShiftSolver.Tpo" "$(DEPDIR)/test_MultiShiftSolver.Po"; else rm -f "$(DEPDIR)/test_MultiShiftSolver.Tpo"; exit 1; fi
	source='Test/test_MultiShiftSolver.cpp' object='test_MultiShiftSolver.obj' libtool=no \
	depfile='$(DEPDIR)/test_MultiShiftSolver.Po' tmpdepfile='$(DEPDIR)/test_MultiShiftSolver.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_MultiShiftSolver.obj `if test -f 'Test/test_MultiShiftSolver.cpp'; then $(CYGPATH_W) 'Test/test_MultiShiftSolver.cpp'; else $(CYGPATH_W) '$(srcdir)/Test/test_MultiShiftSolver.cpp'; fi`

test_overlap.o: Test/test_overlap.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_overlap.o -MD -MP -MF "$(DEPDIR)/test_overlap.Tpo" -c -o test_overlap.o `test -f 'Test/test_overlap.cpp' || echo '$(srcdir)/'`Test/test_overlap.cpp; \
#	then mv -f "$(DEPDIR)/test_overlap.Tpo" "$(DEPDIR)/test_overlap.Po"; else rm -f "$(DEPDIR)/test_overlap.Tpo"; exit 1; fi
	source='Test/test_overlap.cpp' object='test_overlap.o' libtool=no \
	depfile='$(DEPDIR)/test_overlap.Po' tmpdepfile='$(DEPDIR)/test_overlap.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_overlap.o `test -f 'Test/test_overlap.cpp' || echo '$(srcdir)/'`Test/test_overlap.cpp

test_overlap.obj: Test/test_overlap.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_overlap.obj -MD -MP -MF "$(DEPDIR)/test_overlap.Tpo" -c -o test_overlap.obj `if test -f 'Test/test_overlap.cpp'; then $(CYGPATH_W) 'Test/test_overlap.cpp'; else $(CYGPATH_W) '$(srcdir)/Test/test_overlap.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/test_overlap.Tpo" "$(DEPDIR)/test_overlap.Po"; else rm -f "$(DEPDIR)/test_overlap.Tpo"; exit 1; fi
	source='Test/test_overlap.cpp' object='test_overlap.obj' libtool=no \
	depfile='$(DEPDIR)/test_overlap.Po' tmpdepfile='$(DEPDIR)/test_overlap.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_overlap.obj `if test -f 'Test/test_overlap.cpp'; then $(CYGPATH_W) 'Test/test_overlap.cpp'; else $(CYGPATH_W) '$(srcdir)/Test/test_overlap.cpp'; fi`

test_wilson_EvenOdd.o: Test/test_wilson_EvenOdd.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_wilson_EvenOdd.o -MD -MP -MF "$(DEPDIR)/test_wilson_EvenOdd.Tpo" -c -o test_wilson_EvenOdd.o `test -f 'Test/test_wilson_EvenOdd.cpp' || echo '$(srcdir)/'`Test/test_wilson_EvenOdd.cpp; \
#	then mv -f "$(DEPDIR)/test_wilson_EvenOdd.Tpo" "$(DEPDIR)/test_wilson_EvenOdd.Po"; else rm -f "$(DEPDIR)/test_wilson_EvenOdd.Tpo"; exit 1; fi
	source='Test/test_wilson_EvenOdd.cpp' object='test_wilson_EvenOdd.o' libtool=no \
	depfile='$(DEPDIR)/test_wilson_EvenOdd.Po' tmpdepfile='$(DEPDIR)/test_wilson_EvenOdd.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_wilson_EvenOdd.o `test -f 'Test/test_wilson_EvenOdd.cpp' || echo '$(srcdir)/'`Test/test_wilson_EvenOdd.cpp

test_wilson_EvenOdd.obj: Test/test_wilson_EvenOdd.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_wilson_EvenOdd.obj -MD -MP -MF "$(DEPDIR)/test_wilson_EvenOdd.Tpo" -c -o test_wilson_EvenOdd.obj `if test -f 'Test/test_wilson_EvenOdd.cpp'; then $(CYGPATH_W) 'Test/test_wilson_EvenOdd.cpp'; else $(CYGPATH_W) '$(srcdir)/Test/test_wilson_EvenOdd.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/test_wilson_EvenOdd.Tpo" "$(DEPDIR)/test_wilson_EvenOdd.Po"; else rm -f "$(DEPDIR)/test_wilson_EvenOdd.Tpo"; exit 1; fi
	source='Test/test_wilson_EvenOdd.cpp' object='test_wilson_EvenOdd.obj' libtool=no \
	depfile='$(DEPDIR)/test_wilson_EvenOdd.Po' tmpdepfile='$(DEPDIR)/test_wilson_EvenOdd.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_wilson_EvenOdd.obj `if test -f 'Test/test_wilson_EvenOdd.cpp'; then $(CYGPATH_W) 'Test/test_wilson_EvenOdd.cpp'; else $(CYGPATH_W) '$(srcdir)/Test/test_wilson_EvenOdd.cpp'; fi`

test_optimalDomainWall.o: Test/test_optimalDomainWall.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_optimalDomainWall.o -MD -MP -MF "$(DEPDIR)/test_optimalDomainWall.Tpo" -c -o test_optimalDomainWall.o `test -f 'Test/test_optimalDomainWall.cpp' || echo '$(srcdir)/'`Test/test_optimalDomainWall.cpp; \
#	then mv -f "$(DEPDIR)/test_optimalDomainWall.Tpo" "$(DEPDIR)/test_optimalDomainWall.Po"; else rm -f "$(DEPDIR)/test_optimalDomainWall.Tpo"; exit 1; fi
	source='Test/test_optimalDomainWall.cpp' object='test_optimalDomainWall.o' libtool=no \
	depfile='$(DEPDIR)/test_optimalDomainWall.Po' tmpdepfile='$(DEPDIR)/test_optimalDomainWall.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_optimalDomainWall.o `test -f 'Test/test_optimalDomainWall.cpp' || echo '$(srcdir)/'`Test/test_optimalDomainWall.cpp

test_optimalDomainWall.obj: Test/test_optimalDomainWall.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT test_optimalDomainWall.obj -MD -MP -MF "$(DEPDIR)/test_optimalDomainWall.Tpo" -c -o test_optimalDomainWall.obj `if test -f 'Test/test_optimalDomainWall.cpp'; then $(CYGPATH_W) 'Test/test_optimalDomainWall.cpp'; else $(CYGPATH_W) '$(srcdir)/Test/test_optimalDomainWall.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/test_optimalDomainWall.Tpo" "$(DEPDIR)/test_optimalDomainWall.Po"; else rm -f "$(DEPDIR)/test_optimalDomainWall.Tpo"; exit 1; fi
	source='Test/test_optimalDomainWall.cpp' object='test_optimalDomainWall.obj' libtool=no \
	depfile='$(DEPDIR)/test_optimalDomainWall.Po' tmpdepfile='$(DEPDIR)/test_optimalDomainWall.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o test_optimalDomainWall.obj `if test -f 'Test/test_optimalDomainWall.cpp'; then $(CYGPATH_W) 'Test/test_optimalDomainWall.cpp'; else $(CYGPATH_W) '$(srcdir)/Test/test_optimalDomainWall.cpp'; fi`

main.o: Main/main.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT main.o -MD -MP -MF "$(DEPDIR)/main.Tpo" -c -o main.o `test -f 'Main/main.cpp' || echo '$(srcdir)/'`Main/main.cpp; \
#	then mv -f "$(DEPDIR)/main.Tpo" "$(DEPDIR)/main.Po"; else rm -f "$(DEPDIR)/main.Tpo"; exit 1; fi
	source='Main/main.cpp' object='main.o' libtool=no \
	depfile='$(DEPDIR)/main.Po' tmpdepfile='$(DEPDIR)/main.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o main.o `test -f 'Main/main.cpp' || echo '$(srcdir)/'`Main/main.cpp

main.obj: Main/main.cpp
#	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT main.obj -MD -MP -MF "$(DEPDIR)/main.Tpo" -c -o main.obj `if test -f 'Main/main.cpp'; then $(CYGPATH_W) 'Main/main.cpp'; else $(CYGPATH_W) '$(srcdir)/Main/main.cpp'; fi`; \
#	then mv -f "$(DEPDIR)/main.Tpo" "$(DEPDIR)/main.Po"; else rm -f "$(DEPDIR)/main.Tpo"; exit 1; fi
	source='Main/main.cpp' object='main.obj' libtool=no \
	depfile='$(DEPDIR)/main.Po' tmpdepfile='$(DEPDIR)/main.TPo' \
	$(CXXDEPMODE) $(depcomp) \
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o main.obj `if test -f 'Main/main.cpp'; then $(CYGPATH_W) 'Main/main.cpp'; else $(CYGPATH_W) '$(srcdir)/Main/main.cpp'; fi`
uninstall-info-am:
install-includeHEADERS: $(include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(mkdir_p) "$(DESTDIR)$(includedir)"
	@list='$(include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " $(includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(include_HEADERS)'; for p in $$list; do \
	  f="`echo $$p | sed -e 's|^.*/||'`"; \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@set fnord $$MAKEFLAGS; amf=$$2; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	   || case "$$amf" in *=*) exit 1;; *k*) fail=yes;; *) exit 1;; esac; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../include $(distdir)/Action $(distdir)/Communicator $(distdir)/Dirac_ops $(distdir)/EigenModes $(distdir)/HMC $(distdir)/Main $(distdir)/Main/Geometry $(distdir)/Measurements/FermionicM $(distdir)/Measurements/GaugeM $(distdir)/PugiXML $(distdir)/Solver $(distdir)/Test $(distdir)/Tools
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || mkdir "$(distdir)/$$subdir" \
	    || exit 1; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="../$(top_distdir)" \
	        distdir="../$(distdir)/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am: install-includeHEADERS

install-exec-am: install-binPROGRAMS install-libLIBRARIES

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-includeHEADERS \
	uninstall-info-am uninstall-libLIBRARIES

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-recursive \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-exec install-exec-am \
	install-includeHEADERS install-info install-info-am \
	install-libLIBRARIES install-man install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-recursive pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-includeHEADERS uninstall-info-am \
	uninstall-libLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
